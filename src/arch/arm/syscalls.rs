//! Syscalls for the arm architecture.

// This file is automatically generated. Do not edit!

use super::super::Argument;

syscall_enum! {
    pub enum Sysno {
        restart_syscall = 0,
        exit = 1,
        fork = 2,
        read = 3,
        write = 4,
        open = 5,
        close = 6,
        creat = 8,
        link = 9,
        unlink = 10,
        execve = 11,
        chdir = 12,
        mknod = 14,
        chmod = 15,
        lchown = 16,
        lseek = 19,
        getpid = 20,
        mount = 21,
        setuid = 23,
        getuid = 24,
        ptrace = 26,
        pause = 29,
        access = 33,
        nice = 34,
        sync = 36,
        kill = 37,
        rename = 38,
        mkdir = 39,
        rmdir = 40,
        dup = 41,
        pipe = 42,
        times = 43,
        brk = 45,
        setgid = 46,
        getgid = 47,
        geteuid = 49,
        getegid = 50,
        acct = 51,
        umount2 = 52,
        ioctl = 54,
        fcntl = 55,
        setpgid = 57,
        umask = 60,
        chroot = 61,
        ustat = 62,
        dup2 = 63,
        getppid = 64,
        getpgrp = 65,
        setsid = 66,
        sigaction = 67,
        setreuid = 70,
        setregid = 71,
        sigsuspend = 72,
        sigpending = 73,
        sethostname = 74,
        setrlimit = 75,
        getrusage = 77,
        gettimeofday = 78,
        settimeofday = 79,
        getgroups = 80,
        setgroups = 81,
        symlink = 83,
        readlink = 85,
        uselib = 86,
        swapon = 87,
        reboot = 88,
        munmap = 91,
        truncate = 92,
        ftruncate = 93,
        fchmod = 94,
        fchown = 95,
        getpriority = 96,
        setpriority = 97,
        statfs = 99,
        fstatfs = 100,
        syslog = 103,
        setitimer = 104,
        getitimer = 105,
        stat = 106,
        lstat = 107,
        fstat = 108,
        vhangup = 111,
        wait4 = 114,
        swapoff = 115,
        sysinfo = 116,
        fsync = 118,
        sigreturn = 119,
        clone = 120,
        setdomainname = 121,
        uname = 122,
        adjtimex = 124,
        mprotect = 125,
        sigprocmask = 126,
        init_module = 128,
        delete_module = 129,
        quotactl = 131,
        getpgid = 132,
        fchdir = 133,
        bdflush = 134,
        sysfs = 135,
        personality = 136,
        setfsuid = 138,
        setfsgid = 139,
        _llseek = 140,
        getdents = 141,
        _newselect = 142,
        flock = 143,
        msync = 144,
        readv = 145,
        writev = 146,
        getsid = 147,
        fdatasync = 148,
        _sysctl = 149,
        mlock = 150,
        munlock = 151,
        mlockall = 152,
        munlockall = 153,
        sched_setparam = 154,
        sched_getparam = 155,
        sched_setscheduler = 156,
        sched_getscheduler = 157,
        sched_yield = 158,
        sched_get_priority_max = 159,
        sched_get_priority_min = 160,
        sched_rr_get_interval = 161,
        nanosleep = 162,
        mremap = 163,
        setresuid = 164,
        getresuid = 165,
        poll = 168,
        /// NOTE: `nfsservctl` is not implemented in the kernel.
        nfsservctl = 169,
        setresgid = 170,
        getresgid = 171,
        prctl = 172,
        rt_sigreturn = 173,
        rt_sigaction = 174,
        rt_sigprocmask = 175,
        rt_sigpending = 176,
        rt_sigtimedwait = 177,
        rt_sigqueueinfo = 178,
        rt_sigsuspend = 179,
        pread64 = 180,
        pwrite64 = 181,
        chown = 182,
        getcwd = 183,
        capget = 184,
        capset = 185,
        sigaltstack = 186,
        sendfile = 187,
        vfork = 190,
        ugetrlimit = 191,
        mmap2 = 192,
        truncate64 = 193,
        ftruncate64 = 194,
        stat64 = 195,
        lstat64 = 196,
        fstat64 = 197,
        lchown32 = 198,
        getuid32 = 199,
        getgid32 = 200,
        geteuid32 = 201,
        getegid32 = 202,
        setreuid32 = 203,
        setregid32 = 204,
        getgroups32 = 205,
        setgroups32 = 206,
        fchown32 = 207,
        setresuid32 = 208,
        getresuid32 = 209,
        setresgid32 = 210,
        getresgid32 = 211,
        chown32 = 212,
        setuid32 = 213,
        setgid32 = 214,
        setfsuid32 = 215,
        setfsgid32 = 216,
        getdents64 = 217,
        pivot_root = 218,
        mincore = 219,
        madvise = 220,
        fcntl64 = 221,
        gettid = 224,
        readahead = 225,
        setxattr = 226,
        lsetxattr = 227,
        fsetxattr = 228,
        getxattr = 229,
        lgetxattr = 230,
        fgetxattr = 231,
        listxattr = 232,
        llistxattr = 233,
        flistxattr = 234,
        removexattr = 235,
        lremovexattr = 236,
        fremovexattr = 237,
        tkill = 238,
        sendfile64 = 239,
        futex = 240,
        sched_setaffinity = 241,
        sched_getaffinity = 242,
        io_setup = 243,
        io_destroy = 244,
        io_getevents = 245,
        io_submit = 246,
        io_cancel = 247,
        exit_group = 248,
        lookup_dcookie = 249,
        epoll_create = 250,
        epoll_ctl = 251,
        epoll_wait = 252,
        remap_file_pages = 253,
        set_tid_address = 256,
        timer_create = 257,
        timer_settime = 258,
        timer_gettime = 259,
        timer_getoverrun = 260,
        timer_delete = 261,
        clock_settime = 262,
        clock_gettime = 263,
        clock_getres = 264,
        clock_nanosleep = 265,
        statfs64 = 266,
        fstatfs64 = 267,
        tgkill = 268,
        utimes = 269,
        arm_fadvise64_64 = 270,
        pciconfig_iobase = 271,
        pciconfig_read = 272,
        pciconfig_write = 273,
        mq_open = 274,
        mq_unlink = 275,
        mq_timedsend = 276,
        mq_timedreceive = 277,
        mq_notify = 278,
        mq_getsetattr = 279,
        waitid = 280,
        socket = 281,
        bind = 282,
        connect = 283,
        listen = 284,
        accept = 285,
        getsockname = 286,
        getpeername = 287,
        socketpair = 288,
        send = 289,
        sendto = 290,
        recv = 291,
        recvfrom = 292,
        shutdown = 293,
        setsockopt = 294,
        getsockopt = 295,
        sendmsg = 296,
        recvmsg = 297,
        semop = 298,
        semget = 299,
        semctl = 300,
        msgsnd = 301,
        msgrcv = 302,
        msgget = 303,
        msgctl = 304,
        shmat = 305,
        shmdt = 306,
        shmget = 307,
        shmctl = 308,
        add_key = 309,
        request_key = 310,
        keyctl = 311,
        semtimedop = 312,
        /// NOTE: `vserver` is not implemented in the kernel.
        vserver = 313,
        ioprio_set = 314,
        ioprio_get = 315,
        inotify_init = 316,
        inotify_add_watch = 317,
        inotify_rm_watch = 318,
        mbind = 319,
        get_mempolicy = 320,
        set_mempolicy = 321,
        openat = 322,
        mkdirat = 323,
        mknodat = 324,
        fchownat = 325,
        futimesat = 326,
        fstatat64 = 327,
        unlinkat = 328,
        renameat = 329,
        linkat = 330,
        symlinkat = 331,
        readlinkat = 332,
        fchmodat = 333,
        faccessat = 334,
        pselect6 = 335,
        ppoll = 336,
        unshare = 337,
        set_robust_list = 338,
        get_robust_list = 339,
        splice = 340,
        arm_sync_file_range = 341,
        tee = 342,
        vmsplice = 343,
        move_pages = 344,
        getcpu = 345,
        epoll_pwait = 346,
        kexec_load = 347,
        utimensat = 348,
        signalfd = 349,
        timerfd_create = 350,
        eventfd = 351,
        fallocate = 352,
        timerfd_settime = 353,
        timerfd_gettime = 354,
        signalfd4 = 355,
        eventfd2 = 356,
        epoll_create1 = 357,
        dup3 = 358,
        pipe2 = 359,
        inotify_init1 = 360,
        preadv = 361,
        pwritev = 362,
        rt_tgsigqueueinfo = 363,
        perf_event_open = 364,
        recvmmsg = 365,
        accept4 = 366,
        fanotify_init = 367,
        fanotify_mark = 368,
        prlimit64 = 369,
        name_to_handle_at = 370,
        open_by_handle_at = 371,
        clock_adjtime = 372,
        syncfs = 373,
        sendmmsg = 374,
        setns = 375,
        process_vm_readv = 376,
        process_vm_writev = 377,
        kcmp = 378,
        finit_module = 379,
        sched_setattr = 380,
        sched_getattr = 381,
        renameat2 = 382,
        seccomp = 383,
        getrandom = 384,
        memfd_create = 385,
        bpf = 386,
        execveat = 387,
        userfaultfd = 388,
        membarrier = 389,
        mlock2 = 390,
        copy_file_range = 391,
        preadv2 = 392,
        pwritev2 = 393,
        pkey_mprotect = 394,
        pkey_alloc = 395,
        pkey_free = 396,
        statx = 397,
        rseq = 398,
        io_pgetevents = 399,
        migrate_pages = 400,
        kexec_file_load = 401,
        clock_gettime64 = 403,
        clock_settime64 = 404,
        clock_adjtime64 = 405,
        clock_getres_time64 = 406,
        clock_nanosleep_time64 = 407,
        timer_gettime64 = 408,
        timer_settime64 = 409,
        timerfd_gettime64 = 410,
        timerfd_settime64 = 411,
        utimensat_time64 = 412,
        pselect6_time64 = 413,
        ppoll_time64 = 414,
        io_pgetevents_time64 = 416,
        recvmmsg_time64 = 417,
        mq_timedsend_time64 = 418,
        mq_timedreceive_time64 = 419,
        semtimedop_time64 = 420,
        rt_sigtimedwait_time64 = 421,
        futex_time64 = 422,
        sched_rr_get_interval_time64 = 423,
        pidfd_send_signal = 424,
        io_uring_setup = 425,
        io_uring_enter = 426,
        io_uring_register = 427,
        open_tree = 428,
        move_mount = 429,
        fsopen = 430,
        fsconfig = 431,
        fsmount = 432,
        fspick = 433,
        pidfd_open = 434,
        clone3 = 435,
        close_range = 436,
        openat2 = 437,
        pidfd_getfd = 438,
        faccessat2 = 439,
        process_madvise = 440,
        epoll_pwait2 = 441,
        mount_setattr = 442,
        quotactl_path = 443,
        landlock_create_ruleset = 444,
        landlock_add_rule = 445,
        landlock_restrict_self = 446,
    }
    LAST: landlock_restrict_self;
}

fn lookup_definition(sysno: Sysno) -> &'static [Argument<'static>] {
    match sysno {
        Sysno::restart_syscall => &[
        ],
        Sysno::exit => &[
            Argument {
                ty: "int",
                name: "error_code",
            },
        ],
        Sysno::fork => &[
        ],
        Sysno::read => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
            Argument {
                ty: "char __user *",
                name: "buf",
            },
            Argument {
                ty: "size_t",
                name: "count",
            },
        ],
        Sysno::write => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
            Argument {
                ty: "const char __user *",
                name: "buf",
            },
            Argument {
                ty: "size_t",
                name: "count",
            },
        ],
        Sysno::open => &[
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
            Argument {
                ty: "umode_t",
                name: "mode",
            },
        ],
        Sysno::close => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
        ],
        Sysno::creat => &[
            Argument {
                ty: "const char __user *",
                name: "pathname",
            },
            Argument {
                ty: "umode_t",
                name: "mode",
            },
        ],
        Sysno::link => &[
            Argument {
                ty: "const char __user *",
                name: "oldname",
            },
            Argument {
                ty: "const char __user *",
                name: "newname",
            },
        ],
        Sysno::unlink => &[
            Argument {
                ty: "const char __user *",
                name: "pathname",
            },
        ],
        Sysno::execve => &[
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "const char __user *const __user *",
                name: "argv",
            },
            Argument {
                ty: "const char __user *const __user *",
                name: "envp",
            },
        ],
        Sysno::chdir => &[
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
        ],
        Sysno::mknod => &[
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "umode_t",
                name: "mode",
            },
            Argument {
                ty: "unsigned",
                name: "dev",
            },
        ],
        Sysno::chmod => &[
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "umode_t",
                name: "mode",
            },
        ],
        Sysno::lchown => &[
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "uid_t",
                name: "user",
            },
            Argument {
                ty: "gid_t",
                name: "group",
            },
        ],
        Sysno::lseek => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
            Argument {
                ty: "off_t",
                name: "offset",
            },
            Argument {
                ty: "unsigned int",
                name: "whence",
            },
        ],
        Sysno::getpid => &[
        ],
        Sysno::mount => &[
            Argument {
                ty: "char __user *",
                name: "dev_name",
            },
            Argument {
                ty: "char __user *",
                name: "dir_name",
            },
            Argument {
                ty: "char __user *",
                name: "type",
            },
            Argument {
                ty: "unsigned long",
                name: "flags",
            },
            Argument {
                ty: "void __user *",
                name: "data",
            },
        ],
        Sysno::setuid => &[
            Argument {
                ty: "uid_t",
                name: "uid",
            },
        ],
        Sysno::getuid => &[
        ],
        Sysno::ptrace => &[
            Argument {
                ty: "long",
                name: "request",
            },
            Argument {
                ty: "long",
                name: "pid",
            },
            Argument {
                ty: "unsigned long",
                name: "addr",
            },
            Argument {
                ty: "unsigned long",
                name: "data",
            },
        ],
        Sysno::pause => &[
        ],
        Sysno::access => &[
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "int",
                name: "mode",
            },
        ],
        Sysno::nice => &[
            Argument {
                ty: "int",
                name: "increment",
            },
        ],
        Sysno::sync => &[
        ],
        Sysno::kill => &[
            Argument {
                ty: "pid_t",
                name: "pid",
            },
            Argument {
                ty: "int",
                name: "sig",
            },
        ],
        Sysno::rename => &[
            Argument {
                ty: "const char __user *",
                name: "oldname",
            },
            Argument {
                ty: "const char __user *",
                name: "newname",
            },
        ],
        Sysno::mkdir => &[
            Argument {
                ty: "const char __user *",
                name: "pathname",
            },
            Argument {
                ty: "umode_t",
                name: "mode",
            },
        ],
        Sysno::rmdir => &[
            Argument {
                ty: "const char __user *",
                name: "pathname",
            },
        ],
        Sysno::dup => &[
            Argument {
                ty: "unsigned int",
                name: "fildes",
            },
        ],
        Sysno::pipe => &[
            Argument {
                ty: "int __user *",
                name: "fildes",
            },
        ],
        Sysno::times => &[
            Argument {
                ty: "struct tms __user *",
                name: "tbuf",
            },
        ],
        Sysno::brk => &[
            Argument {
                ty: "unsigned long",
                name: "brk",
            },
        ],
        Sysno::setgid => &[
            Argument {
                ty: "gid_t",
                name: "gid",
            },
        ],
        Sysno::getgid => &[
        ],
        Sysno::geteuid => &[
        ],
        Sysno::getegid => &[
        ],
        Sysno::acct => &[
            Argument {
                ty: "const char __user *",
                name: "name",
            },
        ],
        Sysno::ioctl => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
            Argument {
                ty: "unsigned int",
                name: "cmd",
            },
            Argument {
                ty: "unsigned long",
                name: "arg",
            },
        ],
        Sysno::fcntl => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
            Argument {
                ty: "unsigned int",
                name: "cmd",
            },
            Argument {
                ty: "unsigned long",
                name: "arg",
            },
        ],
        Sysno::setpgid => &[
            Argument {
                ty: "pid_t",
                name: "pid",
            },
            Argument {
                ty: "pid_t",
                name: "pgid",
            },
        ],
        Sysno::umask => &[
            Argument {
                ty: "int",
                name: "mask",
            },
        ],
        Sysno::chroot => &[
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
        ],
        Sysno::ustat => &[
            Argument {
                ty: "unsigned",
                name: "dev",
            },
            Argument {
                ty: "struct ustat __user *",
                name: "ubuf",
            },
        ],
        Sysno::dup2 => &[
            Argument {
                ty: "unsigned int",
                name: "oldfd",
            },
            Argument {
                ty: "unsigned int",
                name: "newfd",
            },
        ],
        Sysno::getppid => &[
        ],
        Sysno::getpgrp => &[
        ],
        Sysno::setsid => &[
        ],
        Sysno::sigaction => &[
            Argument {
                ty: "int",
                name: "sig",
            },
            Argument {
                ty: "const struct old_sigaction __user *",
                name: "act",
            },
            Argument {
                ty: "struct old_sigaction __user *",
                name: "oact",
            },
        ],
        Sysno::setreuid => &[
            Argument {
                ty: "uid_t",
                name: "ruid",
            },
            Argument {
                ty: "uid_t",
                name: "euid",
            },
        ],
        Sysno::setregid => &[
            Argument {
                ty: "gid_t",
                name: "rgid",
            },
            Argument {
                ty: "gid_t",
                name: "egid",
            },
        ],
        Sysno::sigsuspend => &[
            Argument {
                ty: "int",
                name: "unused1",
            },
            Argument {
                ty: "int",
                name: "unused2",
            },
            Argument {
                ty: "old_sigset_t",
                name: "mask",
            },
        ],
        Sysno::sigpending => &[
            Argument {
                ty: "old_sigset_t __user *",
                name: "uset",
            },
        ],
        Sysno::sethostname => &[
            Argument {
                ty: "char __user *",
                name: "name",
            },
            Argument {
                ty: "int",
                name: "len",
            },
        ],
        Sysno::setrlimit => &[
            Argument {
                ty: "unsigned int",
                name: "resource",
            },
            Argument {
                ty: "struct rlimit __user *",
                name: "rlim",
            },
        ],
        Sysno::getrusage => &[
            Argument {
                ty: "int",
                name: "who",
            },
            Argument {
                ty: "struct rusage __user *",
                name: "ru",
            },
        ],
        Sysno::gettimeofday => &[
            Argument {
                ty: "struct __kernel_old_timeval __user *",
                name: "tv",
            },
            Argument {
                ty: "struct timezone __user *",
                name: "tz",
            },
        ],
        Sysno::settimeofday => &[
            Argument {
                ty: "struct __kernel_old_timeval __user *",
                name: "tv",
            },
            Argument {
                ty: "struct timezone __user *",
                name: "tz",
            },
        ],
        Sysno::getgroups => &[
            Argument {
                ty: "int",
                name: "gidsetsize",
            },
            Argument {
                ty: "gid_t __user *",
                name: "grouplist",
            },
        ],
        Sysno::setgroups => &[
            Argument {
                ty: "int",
                name: "gidsetsize",
            },
            Argument {
                ty: "gid_t __user *",
                name: "grouplist",
            },
        ],
        Sysno::symlink => &[
            Argument {
                ty: "const char __user *",
                name: "oldname",
            },
            Argument {
                ty: "const char __user *",
                name: "newname",
            },
        ],
        Sysno::readlink => &[
            Argument {
                ty: "const char __user *",
                name: "path",
            },
            Argument {
                ty: "char __user *",
                name: "buf",
            },
            Argument {
                ty: "int",
                name: "bufsiz",
            },
        ],
        Sysno::uselib => &[
            Argument {
                ty: "const char __user *",
                name: "library",
            },
        ],
        Sysno::swapon => &[
            Argument {
                ty: "const char __user *",
                name: "specialfile",
            },
            Argument {
                ty: "int",
                name: "swap_flags",
            },
        ],
        Sysno::reboot => &[
            Argument {
                ty: "int",
                name: "magic1",
            },
            Argument {
                ty: "int",
                name: "magic2",
            },
            Argument {
                ty: "unsigned int",
                name: "cmd",
            },
            Argument {
                ty: "void __user *",
                name: "arg",
            },
        ],
        Sysno::munmap => &[
            Argument {
                ty: "unsigned long",
                name: "addr",
            },
            Argument {
                ty: "size_t",
                name: "len",
            },
        ],
        Sysno::truncate => &[
            Argument {
                ty: "const char __user *",
                name: "path",
            },
            Argument {
                ty: "long",
                name: "length",
            },
        ],
        Sysno::ftruncate => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
            Argument {
                ty: "unsigned long",
                name: "length",
            },
        ],
        Sysno::fchmod => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
            Argument {
                ty: "umode_t",
                name: "mode",
            },
        ],
        Sysno::fchown => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
            Argument {
                ty: "uid_t",
                name: "user",
            },
            Argument {
                ty: "gid_t",
                name: "group",
            },
        ],
        Sysno::getpriority => &[
            Argument {
                ty: "int",
                name: "which",
            },
            Argument {
                ty: "int",
                name: "who",
            },
        ],
        Sysno::setpriority => &[
            Argument {
                ty: "int",
                name: "which",
            },
            Argument {
                ty: "int",
                name: "who",
            },
            Argument {
                ty: "int",
                name: "niceval",
            },
        ],
        Sysno::statfs => &[
            Argument {
                ty: "const char __user *",
                name: "pathname",
            },
            Argument {
                ty: "struct statfs __user *",
                name: "buf",
            },
        ],
        Sysno::fstatfs => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
            Argument {
                ty: "struct statfs __user *",
                name: "buf",
            },
        ],
        Sysno::syslog => &[
            Argument {
                ty: "int",
                name: "type",
            },
            Argument {
                ty: "char __user *",
                name: "buf",
            },
            Argument {
                ty: "int",
                name: "len",
            },
        ],
        Sysno::setitimer => &[
            Argument {
                ty: "int",
                name: "which",
            },
            Argument {
                ty: "struct __kernel_old_itimerval __user *",
                name: "value",
            },
            Argument {
                ty: "struct __kernel_old_itimerval __user *",
                name: "ovalue",
            },
        ],
        Sysno::getitimer => &[
            Argument {
                ty: "int",
                name: "which",
            },
            Argument {
                ty: "struct __kernel_old_itimerval __user *",
                name: "value",
            },
        ],
        Sysno::stat => &[
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "struct __old_kernel_stat __user *",
                name: "statbuf",
            },
        ],
        Sysno::lstat => &[
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "struct __old_kernel_stat __user *",
                name: "statbuf",
            },
        ],
        Sysno::fstat => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
            Argument {
                ty: "struct __old_kernel_stat __user *",
                name: "statbuf",
            },
        ],
        Sysno::vhangup => &[
        ],
        Sysno::wait4 => &[
            Argument {
                ty: "pid_t",
                name: "upid",
            },
            Argument {
                ty: "int __user *",
                name: "stat_addr",
            },
            Argument {
                ty: "int",
                name: "options",
            },
            Argument {
                ty: "struct rusage __user *",
                name: "ru",
            },
        ],
        Sysno::swapoff => &[
            Argument {
                ty: "const char __user *",
                name: "specialfile",
            },
        ],
        Sysno::sysinfo => &[
            Argument {
                ty: "struct sysinfo __user *",
                name: "info",
            },
        ],
        Sysno::fsync => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
        ],
        Sysno::sigreturn => &[
        ],
        Sysno::clone => &[
            Argument {
                ty: "unsigned long",
                name: "clone_flags",
            },
            Argument {
                ty: "unsigned long",
                name: "newsp",
            },
            Argument {
                ty: "int __user *",
                name: "parent_tidptr",
            },
            Argument {
                ty: "int __user *",
                name: "child_tidptr",
            },
            Argument {
                ty: "unsigned long",
                name: "tls",
            },
        ],
        Sysno::setdomainname => &[
            Argument {
                ty: "char __user *",
                name: "name",
            },
            Argument {
                ty: "int",
                name: "len",
            },
        ],
        Sysno::uname => &[
            Argument {
                ty: "struct old_utsname __user *",
                name: "name",
            },
        ],
        Sysno::adjtimex => &[
            Argument {
                ty: "struct __kernel_timex __user *",
                name: "txc_p",
            },
        ],
        Sysno::mprotect => &[
            Argument {
                ty: "unsigned long",
                name: "start",
            },
            Argument {
                ty: "size_t",
                name: "len",
            },
            Argument {
                ty: "unsigned long",
                name: "prot",
            },
        ],
        Sysno::sigprocmask => &[
            Argument {
                ty: "int",
                name: "how",
            },
            Argument {
                ty: "old_sigset_t __user *",
                name: "nset",
            },
            Argument {
                ty: "old_sigset_t __user *",
                name: "oset",
            },
        ],
        Sysno::init_module => &[
            Argument {
                ty: "void __user *",
                name: "umod",
            },
            Argument {
                ty: "unsigned long",
                name: "len",
            },
            Argument {
                ty: "const char __user *",
                name: "uargs",
            },
        ],
        Sysno::delete_module => &[
            Argument {
                ty: "const char __user *",
                name: "name_user",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::quotactl => &[
            Argument {
                ty: "unsigned int",
                name: "cmd",
            },
            Argument {
                ty: "const char __user *",
                name: "special",
            },
            Argument {
                ty: "qid_t",
                name: "id",
            },
            Argument {
                ty: "void __user *",
                name: "addr",
            },
        ],
        Sysno::getpgid => &[
            Argument {
                ty: "pid_t",
                name: "pid",
            },
        ],
        Sysno::fchdir => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
        ],
        Sysno::bdflush => &[
            Argument {
                ty: "int",
                name: "func",
            },
            Argument {
                ty: "long",
                name: "data",
            },
        ],
        Sysno::sysfs => &[
            Argument {
                ty: "int",
                name: "option",
            },
            Argument {
                ty: "unsigned long",
                name: "arg1",
            },
            Argument {
                ty: "unsigned long",
                name: "arg2",
            },
        ],
        Sysno::personality => &[
            Argument {
                ty: "unsigned int",
                name: "personality",
            },
        ],
        Sysno::setfsuid => &[
            Argument {
                ty: "uid_t",
                name: "uid",
            },
        ],
        Sysno::setfsgid => &[
            Argument {
                ty: "gid_t",
                name: "gid",
            },
        ],
        Sysno::getdents => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
            Argument {
                ty: "struct linux_dirent __user *",
                name: "dirent",
            },
            Argument {
                ty: "unsigned int",
                name: "count",
            },
        ],
        Sysno::flock => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
            Argument {
                ty: "unsigned int",
                name: "cmd",
            },
        ],
        Sysno::msync => &[
            Argument {
                ty: "unsigned long",
                name: "start",
            },
            Argument {
                ty: "size_t",
                name: "len",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::readv => &[
            Argument {
                ty: "unsigned long",
                name: "fd",
            },
            Argument {
                ty: "const struct iovec __user *",
                name: "vec",
            },
            Argument {
                ty: "unsigned long",
                name: "vlen",
            },
        ],
        Sysno::writev => &[
            Argument {
                ty: "unsigned long",
                name: "fd",
            },
            Argument {
                ty: "const struct iovec __user *",
                name: "vec",
            },
            Argument {
                ty: "unsigned long",
                name: "vlen",
            },
        ],
        Sysno::getsid => &[
            Argument {
                ty: "pid_t",
                name: "pid",
            },
        ],
        Sysno::fdatasync => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
        ],
        Sysno::mlock => &[
            Argument {
                ty: "unsigned long",
                name: "start",
            },
            Argument {
                ty: "size_t",
                name: "len",
            },
        ],
        Sysno::munlock => &[
            Argument {
                ty: "unsigned long",
                name: "start",
            },
            Argument {
                ty: "size_t",
                name: "len",
            },
        ],
        Sysno::mlockall => &[
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::munlockall => &[
        ],
        Sysno::sched_setparam => &[
            Argument {
                ty: "pid_t",
                name: "pid",
            },
            Argument {
                ty: "struct sched_param __user *",
                name: "param",
            },
        ],
        Sysno::sched_getparam => &[
            Argument {
                ty: "pid_t",
                name: "pid",
            },
            Argument {
                ty: "struct sched_param __user *",
                name: "param",
            },
        ],
        Sysno::sched_setscheduler => &[
            Argument {
                ty: "pid_t",
                name: "pid",
            },
            Argument {
                ty: "int",
                name: "policy",
            },
            Argument {
                ty: "struct sched_param __user *",
                name: "param",
            },
        ],
        Sysno::sched_getscheduler => &[
            Argument {
                ty: "pid_t",
                name: "pid",
            },
        ],
        Sysno::sched_yield => &[
        ],
        Sysno::sched_get_priority_max => &[
            Argument {
                ty: "int",
                name: "policy",
            },
        ],
        Sysno::sched_get_priority_min => &[
            Argument {
                ty: "int",
                name: "policy",
            },
        ],
        Sysno::sched_rr_get_interval => &[
            Argument {
                ty: "pid_t",
                name: "pid",
            },
            Argument {
                ty: "struct __kernel_timespec __user *",
                name: "interval",
            },
        ],
        Sysno::nanosleep => &[
            Argument {
                ty: "struct __kernel_timespec __user *",
                name: "rqtp",
            },
            Argument {
                ty: "struct __kernel_timespec __user *",
                name: "rmtp",
            },
        ],
        Sysno::mremap => &[
            Argument {
                ty: "unsigned long",
                name: "addr",
            },
            Argument {
                ty: "unsigned long",
                name: "old_len",
            },
            Argument {
                ty: "unsigned long",
                name: "new_len",
            },
            Argument {
                ty: "unsigned long",
                name: "flags",
            },
            Argument {
                ty: "unsigned long",
                name: "new_addr",
            },
        ],
        Sysno::setresuid => &[
            Argument {
                ty: "uid_t",
                name: "ruid",
            },
            Argument {
                ty: "uid_t",
                name: "euid",
            },
            Argument {
                ty: "uid_t",
                name: "suid",
            },
        ],
        Sysno::getresuid => &[
            Argument {
                ty: "uid_t __user *",
                name: "ruidp",
            },
            Argument {
                ty: "uid_t __user *",
                name: "euidp",
            },
            Argument {
                ty: "uid_t __user *",
                name: "suidp",
            },
        ],
        Sysno::poll => &[
            Argument {
                ty: "struct pollfd __user *",
                name: "ufds",
            },
            Argument {
                ty: "unsigned int",
                name: "nfds",
            },
            Argument {
                ty: "int",
                name: "timeout_msecs",
            },
        ],
        Sysno::setresgid => &[
            Argument {
                ty: "gid_t",
                name: "rgid",
            },
            Argument {
                ty: "gid_t",
                name: "egid",
            },
            Argument {
                ty: "gid_t",
                name: "sgid",
            },
        ],
        Sysno::getresgid => &[
            Argument {
                ty: "gid_t __user *",
                name: "rgidp",
            },
            Argument {
                ty: "gid_t __user *",
                name: "egidp",
            },
            Argument {
                ty: "gid_t __user *",
                name: "sgidp",
            },
        ],
        Sysno::prctl => &[
            Argument {
                ty: "int",
                name: "option",
            },
            Argument {
                ty: "unsigned long",
                name: "arg2",
            },
            Argument {
                ty: "unsigned long",
                name: "arg3",
            },
            Argument {
                ty: "unsigned long",
                name: "arg4",
            },
            Argument {
                ty: "unsigned long",
                name: "arg5",
            },
        ],
        Sysno::rt_sigreturn => &[
        ],
        Sysno::rt_sigaction => &[
            Argument {
                ty: "int",
                name: "sig",
            },
            Argument {
                ty: "const struct sigaction __user *",
                name: "act",
            },
            Argument {
                ty: "struct sigaction __user *",
                name: "oact",
            },
            Argument {
                ty: "size_t",
                name: "sigsetsize",
            },
        ],
        Sysno::rt_sigprocmask => &[
            Argument {
                ty: "int",
                name: "how",
            },
            Argument {
                ty: "sigset_t __user *",
                name: "nset",
            },
            Argument {
                ty: "sigset_t __user *",
                name: "oset",
            },
            Argument {
                ty: "size_t",
                name: "sigsetsize",
            },
        ],
        Sysno::rt_sigpending => &[
            Argument {
                ty: "sigset_t __user *",
                name: "uset",
            },
            Argument {
                ty: "size_t",
                name: "sigsetsize",
            },
        ],
        Sysno::rt_sigtimedwait => &[
            Argument {
                ty: "const sigset_t __user *",
                name: "uthese",
            },
            Argument {
                ty: "siginfo_t __user *",
                name: "uinfo",
            },
            Argument {
                ty: "const struct __kernel_timespec __user *",
                name: "uts",
            },
            Argument {
                ty: "size_t",
                name: "sigsetsize",
            },
        ],
        Sysno::rt_sigqueueinfo => &[
            Argument {
                ty: "pid_t",
                name: "pid",
            },
            Argument {
                ty: "int",
                name: "sig",
            },
            Argument {
                ty: "siginfo_t __user *",
                name: "uinfo",
            },
        ],
        Sysno::rt_sigsuspend => &[
            Argument {
                ty: "sigset_t __user *",
                name: "unewset",
            },
            Argument {
                ty: "size_t",
                name: "sigsetsize",
            },
        ],
        Sysno::pread64 => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
            Argument {
                ty: "char __user *",
                name: "buf",
            },
            Argument {
                ty: "size_t",
                name: "count",
            },
            Argument {
                ty: "loff_t",
                name: "pos",
            },
        ],
        Sysno::pwrite64 => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
            Argument {
                ty: "const char __user *",
                name: "buf",
            },
            Argument {
                ty: "size_t",
                name: "count",
            },
            Argument {
                ty: "loff_t",
                name: "pos",
            },
        ],
        Sysno::chown => &[
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "uid_t",
                name: "user",
            },
            Argument {
                ty: "gid_t",
                name: "group",
            },
        ],
        Sysno::getcwd => &[
            Argument {
                ty: "char __user *",
                name: "buf",
            },
            Argument {
                ty: "unsigned long",
                name: "size",
            },
        ],
        Sysno::capget => &[
            Argument {
                ty: "cap_user_header_t",
                name: "header",
            },
            Argument {
                ty: "cap_user_data_t",
                name: "dataptr",
            },
        ],
        Sysno::capset => &[
            Argument {
                ty: "cap_user_header_t",
                name: "header",
            },
            Argument {
                ty: "const cap_user_data_t",
                name: "data",
            },
        ],
        Sysno::sigaltstack => &[
            Argument {
                ty: "const stack_t __user *",
                name: "uss",
            },
            Argument {
                ty: "stack_t __user *",
                name: "uoss",
            },
        ],
        Sysno::sendfile => &[
            Argument {
                ty: "int",
                name: "out_fd",
            },
            Argument {
                ty: "int",
                name: "in_fd",
            },
            Argument {
                ty: "off_t __user *",
                name: "offset",
            },
            Argument {
                ty: "size_t",
                name: "count",
            },
        ],
        Sysno::vfork => &[
        ],
        Sysno::mmap2 => &[
            Argument {
                ty: "unsigned long",
                name: "addr",
            },
            Argument {
                ty: "unsigned long",
                name: "len",
            },
            Argument {
                ty: "unsigned long",
                name: "prot",
            },
            Argument {
                ty: "unsigned long",
                name: "flags",
            },
            Argument {
                ty: "unsigned long",
                name: "fd",
            },
            Argument {
                ty: "unsigned long",
                name: "pgoff",
            },
        ],
        Sysno::truncate64 => &[
            Argument {
                ty: "const char __user *",
                name: "path",
            },
            Argument {
                ty: "loff_t",
                name: "length",
            },
        ],
        Sysno::ftruncate64 => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
            Argument {
                ty: "loff_t",
                name: "length",
            },
        ],
        Sysno::stat64 => &[
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "struct stat64 __user *",
                name: "statbuf",
            },
        ],
        Sysno::lstat64 => &[
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "struct stat64 __user *",
                name: "statbuf",
            },
        ],
        Sysno::fstat64 => &[
            Argument {
                ty: "unsigned long",
                name: "fd",
            },
            Argument {
                ty: "struct stat64 __user *",
                name: "statbuf",
            },
        ],
        Sysno::getdents64 => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
            Argument {
                ty: "struct linux_dirent64 __user *",
                name: "dirent",
            },
            Argument {
                ty: "unsigned int",
                name: "count",
            },
        ],
        Sysno::pivot_root => &[
            Argument {
                ty: "const char __user *",
                name: "new_root",
            },
            Argument {
                ty: "const char __user *",
                name: "put_old",
            },
        ],
        Sysno::mincore => &[
            Argument {
                ty: "unsigned long",
                name: "start",
            },
            Argument {
                ty: "size_t",
                name: "len",
            },
            Argument {
                ty: "unsigned char __user *",
                name: "vec",
            },
        ],
        Sysno::madvise => &[
            Argument {
                ty: "unsigned long",
                name: "start",
            },
            Argument {
                ty: "size_t",
                name: "len_in",
            },
            Argument {
                ty: "int",
                name: "behavior",
            },
        ],
        Sysno::fcntl64 => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
            Argument {
                ty: "unsigned int",
                name: "cmd",
            },
            Argument {
                ty: "unsigned long",
                name: "arg",
            },
        ],
        Sysno::gettid => &[
        ],
        Sysno::readahead => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "loff_t",
                name: "offset",
            },
            Argument {
                ty: "size_t",
                name: "count",
            },
        ],
        Sysno::setxattr => &[
            Argument {
                ty: "const char __user *",
                name: "pathname",
            },
            Argument {
                ty: "const char __user *",
                name: "name",
            },
            Argument {
                ty: "const void __user *",
                name: "value",
            },
            Argument {
                ty: "size_t",
                name: "size",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::lsetxattr => &[
            Argument {
                ty: "const char __user *",
                name: "pathname",
            },
            Argument {
                ty: "const char __user *",
                name: "name",
            },
            Argument {
                ty: "const void __user *",
                name: "value",
            },
            Argument {
                ty: "size_t",
                name: "size",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::fsetxattr => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "const char __user *",
                name: "name",
            },
            Argument {
                ty: "const void __user *",
                name: "value",
            },
            Argument {
                ty: "size_t",
                name: "size",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::getxattr => &[
            Argument {
                ty: "const char __user *",
                name: "pathname",
            },
            Argument {
                ty: "const char __user *",
                name: "name",
            },
            Argument {
                ty: "void __user *",
                name: "value",
            },
            Argument {
                ty: "size_t",
                name: "size",
            },
        ],
        Sysno::lgetxattr => &[
            Argument {
                ty: "const char __user *",
                name: "pathname",
            },
            Argument {
                ty: "const char __user *",
                name: "name",
            },
            Argument {
                ty: "void __user *",
                name: "value",
            },
            Argument {
                ty: "size_t",
                name: "size",
            },
        ],
        Sysno::fgetxattr => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "const char __user *",
                name: "name",
            },
            Argument {
                ty: "void __user *",
                name: "value",
            },
            Argument {
                ty: "size_t",
                name: "size",
            },
        ],
        Sysno::listxattr => &[
            Argument {
                ty: "const char __user *",
                name: "pathname",
            },
            Argument {
                ty: "char __user *",
                name: "list",
            },
            Argument {
                ty: "size_t",
                name: "size",
            },
        ],
        Sysno::llistxattr => &[
            Argument {
                ty: "const char __user *",
                name: "pathname",
            },
            Argument {
                ty: "char __user *",
                name: "list",
            },
            Argument {
                ty: "size_t",
                name: "size",
            },
        ],
        Sysno::flistxattr => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "char __user *",
                name: "list",
            },
            Argument {
                ty: "size_t",
                name: "size",
            },
        ],
        Sysno::removexattr => &[
            Argument {
                ty: "const char __user *",
                name: "pathname",
            },
            Argument {
                ty: "const char __user *",
                name: "name",
            },
        ],
        Sysno::lremovexattr => &[
            Argument {
                ty: "const char __user *",
                name: "pathname",
            },
            Argument {
                ty: "const char __user *",
                name: "name",
            },
        ],
        Sysno::fremovexattr => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "const char __user *",
                name: "name",
            },
        ],
        Sysno::tkill => &[
            Argument {
                ty: "pid_t",
                name: "pid",
            },
            Argument {
                ty: "int",
                name: "sig",
            },
        ],
        Sysno::sendfile64 => &[
            Argument {
                ty: "int",
                name: "out_fd",
            },
            Argument {
                ty: "int",
                name: "in_fd",
            },
            Argument {
                ty: "loff_t __user *",
                name: "offset",
            },
            Argument {
                ty: "size_t",
                name: "count",
            },
        ],
        Sysno::futex => &[
            Argument {
                ty: "u32 __user *",
                name: "uaddr",
            },
            Argument {
                ty: "int",
                name: "op",
            },
            Argument {
                ty: "u32",
                name: "val",
            },
            Argument {
                ty: "const struct __kernel_timespec __user *",
                name: "utime",
            },
            Argument {
                ty: "u32 __user *",
                name: "uaddr2",
            },
            Argument {
                ty: "u32",
                name: "val3",
            },
        ],
        Sysno::sched_setaffinity => &[
            Argument {
                ty: "pid_t",
                name: "pid",
            },
            Argument {
                ty: "unsigned int",
                name: "len",
            },
            Argument {
                ty: "unsigned long __user *",
                name: "user_mask_ptr",
            },
        ],
        Sysno::sched_getaffinity => &[
            Argument {
                ty: "pid_t",
                name: "pid",
            },
            Argument {
                ty: "unsigned int",
                name: "len",
            },
            Argument {
                ty: "unsigned long __user *",
                name: "user_mask_ptr",
            },
        ],
        Sysno::io_setup => &[
            Argument {
                ty: "unsigned",
                name: "nr_events",
            },
            Argument {
                ty: "aio_context_t __user *",
                name: "ctxp",
            },
        ],
        Sysno::io_destroy => &[
            Argument {
                ty: "aio_context_t",
                name: "ctx",
            },
        ],
        Sysno::io_getevents => &[
            Argument {
                ty: "aio_context_t",
                name: "ctx_id",
            },
            Argument {
                ty: "long",
                name: "min_nr",
            },
            Argument {
                ty: "long",
                name: "nr",
            },
            Argument {
                ty: "struct io_event __user *",
                name: "events",
            },
            Argument {
                ty: "struct __kernel_timespec __user *",
                name: "timeout",
            },
        ],
        Sysno::io_submit => &[
            Argument {
                ty: "aio_context_t",
                name: "ctx_id",
            },
            Argument {
                ty: "long",
                name: "nr",
            },
            Argument {
                ty: "struct iocb __user * __user *",
                name: "iocbpp",
            },
        ],
        Sysno::io_cancel => &[
            Argument {
                ty: "aio_context_t",
                name: "ctx_id",
            },
            Argument {
                ty: "struct iocb __user *",
                name: "iocb",
            },
            Argument {
                ty: "struct io_event __user *",
                name: "result",
            },
        ],
        Sysno::exit_group => &[
            Argument {
                ty: "int",
                name: "error_code",
            },
        ],
        Sysno::epoll_create => &[
            Argument {
                ty: "int",
                name: "size",
            },
        ],
        Sysno::epoll_ctl => &[
            Argument {
                ty: "int",
                name: "epfd",
            },
            Argument {
                ty: "int",
                name: "op",
            },
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "struct epoll_event __user *",
                name: "event",
            },
        ],
        Sysno::epoll_wait => &[
            Argument {
                ty: "int",
                name: "epfd",
            },
            Argument {
                ty: "struct epoll_event __user *",
                name: "events",
            },
            Argument {
                ty: "int",
                name: "maxevents",
            },
            Argument {
                ty: "int",
                name: "timeout",
            },
        ],
        Sysno::remap_file_pages => &[
            Argument {
                ty: "unsigned long",
                name: "start",
            },
            Argument {
                ty: "unsigned long",
                name: "size",
            },
            Argument {
                ty: "unsigned long",
                name: "prot",
            },
            Argument {
                ty: "unsigned long",
                name: "pgoff",
            },
            Argument {
                ty: "unsigned long",
                name: "flags",
            },
        ],
        Sysno::set_tid_address => &[
            Argument {
                ty: "int __user *",
                name: "tidptr",
            },
        ],
        Sysno::timer_create => &[
            Argument {
                ty: "const clockid_t",
                name: "which_clock",
            },
            Argument {
                ty: "struct sigevent __user *",
                name: "timer_event_spec",
            },
            Argument {
                ty: "timer_t __user *",
                name: "created_timer_id",
            },
        ],
        Sysno::timer_settime => &[
            Argument {
                ty: "timer_t",
                name: "timer_id",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
            Argument {
                ty: "const struct __kernel_itimerspec __user *",
                name: "new_setting",
            },
            Argument {
                ty: "struct __kernel_itimerspec __user *",
                name: "old_setting",
            },
        ],
        Sysno::timer_gettime => &[
            Argument {
                ty: "timer_t",
                name: "timer_id",
            },
            Argument {
                ty: "struct __kernel_itimerspec __user *",
                name: "setting",
            },
        ],
        Sysno::timer_getoverrun => &[
            Argument {
                ty: "timer_t",
                name: "timer_id",
            },
        ],
        Sysno::timer_delete => &[
            Argument {
                ty: "timer_t",
                name: "timer_id",
            },
        ],
        Sysno::clock_settime => &[
            Argument {
                ty: "const clockid_t",
                name: "which_clock",
            },
            Argument {
                ty: "const struct __kernel_timespec __user *",
                name: "tp",
            },
        ],
        Sysno::clock_gettime => &[
            Argument {
                ty: "const clockid_t",
                name: "which_clock",
            },
            Argument {
                ty: "struct __kernel_timespec __user *",
                name: "tp",
            },
        ],
        Sysno::clock_getres => &[
            Argument {
                ty: "const clockid_t",
                name: "which_clock",
            },
            Argument {
                ty: "struct __kernel_timespec __user *",
                name: "tp",
            },
        ],
        Sysno::clock_nanosleep => &[
            Argument {
                ty: "const clockid_t",
                name: "which_clock",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
            Argument {
                ty: "const struct __kernel_timespec __user *",
                name: "rqtp",
            },
            Argument {
                ty: "struct __kernel_timespec __user *",
                name: "rmtp",
            },
        ],
        Sysno::statfs64 => &[
            Argument {
                ty: "const char __user *",
                name: "pathname",
            },
            Argument {
                ty: "size_t",
                name: "sz",
            },
            Argument {
                ty: "struct statfs64 __user *",
                name: "buf",
            },
        ],
        Sysno::fstatfs64 => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
            Argument {
                ty: "size_t",
                name: "sz",
            },
            Argument {
                ty: "struct statfs64 __user *",
                name: "buf",
            },
        ],
        Sysno::tgkill => &[
            Argument {
                ty: "pid_t",
                name: "tgid",
            },
            Argument {
                ty: "pid_t",
                name: "pid",
            },
            Argument {
                ty: "int",
                name: "sig",
            },
        ],
        Sysno::utimes => &[
            Argument {
                ty: "char __user *",
                name: "filename",
            },
            Argument {
                ty: "struct __kernel_old_timeval __user *",
                name: "utimes",
            },
        ],
        Sysno::pciconfig_iobase => &[
            Argument {
                ty: "long",
                name: "which",
            },
            Argument {
                ty: "unsigned long",
                name: "in_bus",
            },
            Argument {
                ty: "unsigned long",
                name: "in_devfn",
            },
        ],
        Sysno::pciconfig_read => &[
            Argument {
                ty: "unsigned long",
                name: "bus",
            },
            Argument {
                ty: "unsigned long",
                name: "dfn",
            },
            Argument {
                ty: "unsigned long",
                name: "off",
            },
            Argument {
                ty: "unsigned long",
                name: "len",
            },
            Argument {
                ty: "void __user *",
                name: "buf",
            },
        ],
        Sysno::pciconfig_write => &[
            Argument {
                ty: "unsigned long",
                name: "bus",
            },
            Argument {
                ty: "unsigned long",
                name: "dfn",
            },
            Argument {
                ty: "unsigned long",
                name: "off",
            },
            Argument {
                ty: "unsigned long",
                name: "len",
            },
            Argument {
                ty: "void __user *",
                name: "buf",
            },
        ],
        Sysno::mq_open => &[
            Argument {
                ty: "const char __user *",
                name: "u_name",
            },
            Argument {
                ty: "int",
                name: "oflag",
            },
            Argument {
                ty: "umode_t",
                name: "mode",
            },
            Argument {
                ty: "struct mq_attr __user *",
                name: "u_attr",
            },
        ],
        Sysno::mq_unlink => &[
            Argument {
                ty: "const char __user *",
                name: "u_name",
            },
        ],
        Sysno::mq_timedsend => &[
            Argument {
                ty: "mqd_t",
                name: "mqdes",
            },
            Argument {
                ty: "const char __user *",
                name: "u_msg_ptr",
            },
            Argument {
                ty: "size_t",
                name: "msg_len",
            },
            Argument {
                ty: "unsigned int",
                name: "msg_prio",
            },
            Argument {
                ty: "const struct __kernel_timespec __user *",
                name: "u_abs_timeout",
            },
        ],
        Sysno::mq_timedreceive => &[
            Argument {
                ty: "mqd_t",
                name: "mqdes",
            },
            Argument {
                ty: "char __user *",
                name: "u_msg_ptr",
            },
            Argument {
                ty: "size_t",
                name: "msg_len",
            },
            Argument {
                ty: "unsigned int __user *",
                name: "u_msg_prio",
            },
            Argument {
                ty: "const struct __kernel_timespec __user *",
                name: "u_abs_timeout",
            },
        ],
        Sysno::mq_notify => &[
            Argument {
                ty: "mqd_t",
                name: "mqdes",
            },
            Argument {
                ty: "const struct sigevent __user *",
                name: "u_notification",
            },
        ],
        Sysno::mq_getsetattr => &[
            Argument {
                ty: "mqd_t",
                name: "mqdes",
            },
            Argument {
                ty: "const struct mq_attr __user *",
                name: "u_mqstat",
            },
            Argument {
                ty: "struct mq_attr __user *",
                name: "u_omqstat",
            },
        ],
        Sysno::waitid => &[
            Argument {
                ty: "int",
                name: "which",
            },
            Argument {
                ty: "pid_t",
                name: "upid",
            },
            Argument {
                ty: "struct siginfo __user *",
                name: "infop",
            },
            Argument {
                ty: "int",
                name: "options",
            },
            Argument {
                ty: "struct rusage __user *",
                name: "ru",
            },
        ],
        Sysno::socket => &[
            Argument {
                ty: "int",
                name: "family",
            },
            Argument {
                ty: "int",
                name: "type",
            },
            Argument {
                ty: "int",
                name: "protocol",
            },
        ],
        Sysno::bind => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "struct sockaddr __user *",
                name: "umyaddr",
            },
            Argument {
                ty: "int",
                name: "addrlen",
            },
        ],
        Sysno::connect => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "struct sockaddr __user *",
                name: "uservaddr",
            },
            Argument {
                ty: "int",
                name: "addrlen",
            },
        ],
        Sysno::listen => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "int",
                name: "backlog",
            },
        ],
        Sysno::accept => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "struct sockaddr __user *",
                name: "upeer_sockaddr",
            },
            Argument {
                ty: "int __user *",
                name: "upeer_addrlen",
            },
        ],
        Sysno::getsockname => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "struct sockaddr __user *",
                name: "usockaddr",
            },
            Argument {
                ty: "int __user *",
                name: "usockaddr_len",
            },
        ],
        Sysno::getpeername => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "struct sockaddr __user *",
                name: "usockaddr",
            },
            Argument {
                ty: "int __user *",
                name: "usockaddr_len",
            },
        ],
        Sysno::socketpair => &[
            Argument {
                ty: "int",
                name: "family",
            },
            Argument {
                ty: "int",
                name: "type",
            },
            Argument {
                ty: "int",
                name: "protocol",
            },
            Argument {
                ty: "int __user *",
                name: "usockvec",
            },
        ],
        Sysno::send => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "void __user *",
                name: "buff",
            },
            Argument {
                ty: "size_t",
                name: "len",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::sendto => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "void __user *",
                name: "buff",
            },
            Argument {
                ty: "size_t",
                name: "len",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
            Argument {
                ty: "struct sockaddr __user *",
                name: "addr",
            },
            Argument {
                ty: "int",
                name: "addr_len",
            },
        ],
        Sysno::recv => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "void __user *",
                name: "ubuf",
            },
            Argument {
                ty: "size_t",
                name: "size",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::recvfrom => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "void __user *",
                name: "ubuf",
            },
            Argument {
                ty: "size_t",
                name: "size",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
            Argument {
                ty: "struct sockaddr __user *",
                name: "addr",
            },
            Argument {
                ty: "int __user *",
                name: "addr_len",
            },
        ],
        Sysno::shutdown => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "int",
                name: "how",
            },
        ],
        Sysno::setsockopt => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "int",
                name: "level",
            },
            Argument {
                ty: "int",
                name: "optname",
            },
            Argument {
                ty: "char __user *",
                name: "optval",
            },
            Argument {
                ty: "int",
                name: "optlen",
            },
        ],
        Sysno::getsockopt => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "int",
                name: "level",
            },
            Argument {
                ty: "int",
                name: "optname",
            },
            Argument {
                ty: "char __user *",
                name: "optval",
            },
            Argument {
                ty: "int __user *",
                name: "optlen",
            },
        ],
        Sysno::sendmsg => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "struct user_msghdr __user *",
                name: "msg",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::recvmsg => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "struct user_msghdr __user *",
                name: "msg",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::semop => &[
            Argument {
                ty: "int",
                name: "semid",
            },
            Argument {
                ty: "struct sembuf __user *",
                name: "tsops",
            },
            Argument {
                ty: "unsigned",
                name: "nsops",
            },
        ],
        Sysno::semget => &[
            Argument {
                ty: "key_t",
                name: "key",
            },
            Argument {
                ty: "int",
                name: "nsems",
            },
            Argument {
                ty: "int",
                name: "semflg",
            },
        ],
        Sysno::semctl => &[
            Argument {
                ty: "int",
                name: "semid",
            },
            Argument {
                ty: "int",
                name: "semnum",
            },
            Argument {
                ty: "int",
                name: "cmd",
            },
            Argument {
                ty: "unsigned long",
                name: "arg",
            },
        ],
        Sysno::msgsnd => &[
            Argument {
                ty: "int",
                name: "msqid",
            },
            Argument {
                ty: "struct msgbuf __user *",
                name: "msgp",
            },
            Argument {
                ty: "size_t",
                name: "msgsz",
            },
            Argument {
                ty: "int",
                name: "msgflg",
            },
        ],
        Sysno::msgrcv => &[
            Argument {
                ty: "int",
                name: "msqid",
            },
            Argument {
                ty: "struct msgbuf __user *",
                name: "msgp",
            },
            Argument {
                ty: "size_t",
                name: "msgsz",
            },
            Argument {
                ty: "long",
                name: "msgtyp",
            },
            Argument {
                ty: "int",
                name: "msgflg",
            },
        ],
        Sysno::msgget => &[
            Argument {
                ty: "key_t",
                name: "key",
            },
            Argument {
                ty: "int",
                name: "msgflg",
            },
        ],
        Sysno::msgctl => &[
            Argument {
                ty: "int",
                name: "msqid",
            },
            Argument {
                ty: "int",
                name: "cmd",
            },
            Argument {
                ty: "struct msqid_ds __user *",
                name: "buf",
            },
        ],
        Sysno::shmat => &[
            Argument {
                ty: "int",
                name: "shmid",
            },
            Argument {
                ty: "char __user *",
                name: "shmaddr",
            },
            Argument {
                ty: "int",
                name: "shmflg",
            },
        ],
        Sysno::shmdt => &[
            Argument {
                ty: "char __user *",
                name: "shmaddr",
            },
        ],
        Sysno::shmget => &[
            Argument {
                ty: "key_t",
                name: "key",
            },
            Argument {
                ty: "size_t",
                name: "size",
            },
            Argument {
                ty: "int",
                name: "shmflg",
            },
        ],
        Sysno::shmctl => &[
            Argument {
                ty: "int",
                name: "shmid",
            },
            Argument {
                ty: "int",
                name: "cmd",
            },
            Argument {
                ty: "struct shmid_ds __user *",
                name: "buf",
            },
        ],
        Sysno::add_key => &[
            Argument {
                ty: "const char __user *",
                name: "_type",
            },
            Argument {
                ty: "const char __user *",
                name: "_description",
            },
            Argument {
                ty: "const void __user *",
                name: "_payload",
            },
            Argument {
                ty: "size_t",
                name: "plen",
            },
            Argument {
                ty: "key_serial_t",
                name: "ringid",
            },
        ],
        Sysno::request_key => &[
            Argument {
                ty: "const char __user *",
                name: "_type",
            },
            Argument {
                ty: "const char __user *",
                name: "_description",
            },
            Argument {
                ty: "const char __user *",
                name: "_callout_info",
            },
            Argument {
                ty: "key_serial_t",
                name: "destringid",
            },
        ],
        Sysno::keyctl => &[
            Argument {
                ty: "int",
                name: "option",
            },
            Argument {
                ty: "unsigned long",
                name: "arg2",
            },
            Argument {
                ty: "unsigned long",
                name: "arg3",
            },
            Argument {
                ty: "unsigned long",
                name: "arg4",
            },
            Argument {
                ty: "unsigned long",
                name: "arg5",
            },
        ],
        Sysno::semtimedop => &[
            Argument {
                ty: "int",
                name: "semid",
            },
            Argument {
                ty: "struct sembuf __user *",
                name: "tsops",
            },
            Argument {
                ty: "unsigned int",
                name: "nsops",
            },
            Argument {
                ty: "const struct __kernel_timespec __user *",
                name: "timeout",
            },
        ],
        Sysno::ioprio_set => &[
            Argument {
                ty: "int",
                name: "which",
            },
            Argument {
                ty: "int",
                name: "who",
            },
            Argument {
                ty: "int",
                name: "ioprio",
            },
        ],
        Sysno::ioprio_get => &[
            Argument {
                ty: "int",
                name: "which",
            },
            Argument {
                ty: "int",
                name: "who",
            },
        ],
        Sysno::inotify_init => &[
        ],
        Sysno::inotify_add_watch => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "const char __user *",
                name: "pathname",
            },
            Argument {
                ty: "u32",
                name: "mask",
            },
        ],
        Sysno::inotify_rm_watch => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "__s32",
                name: "wd",
            },
        ],
        Sysno::mbind => &[
            Argument {
                ty: "unsigned long",
                name: "start",
            },
            Argument {
                ty: "unsigned long",
                name: "len",
            },
            Argument {
                ty: "unsigned long",
                name: "mode",
            },
            Argument {
                ty: "const unsigned long __user *",
                name: "nmask",
            },
            Argument {
                ty: "unsigned long",
                name: "maxnode",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::get_mempolicy => &[
            Argument {
                ty: "int __user *",
                name: "policy",
            },
            Argument {
                ty: "unsigned long __user *",
                name: "nmask",
            },
            Argument {
                ty: "unsigned long",
                name: "maxnode",
            },
            Argument {
                ty: "unsigned long",
                name: "addr",
            },
            Argument {
                ty: "unsigned long",
                name: "flags",
            },
        ],
        Sysno::set_mempolicy => &[
            Argument {
                ty: "int",
                name: "mode",
            },
            Argument {
                ty: "const unsigned long __user *",
                name: "nmask",
            },
            Argument {
                ty: "unsigned long",
                name: "maxnode",
            },
        ],
        Sysno::openat => &[
            Argument {
                ty: "int",
                name: "dfd",
            },
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
            Argument {
                ty: "umode_t",
                name: "mode",
            },
        ],
        Sysno::mkdirat => &[
            Argument {
                ty: "int",
                name: "dfd",
            },
            Argument {
                ty: "const char __user *",
                name: "pathname",
            },
            Argument {
                ty: "umode_t",
                name: "mode",
            },
        ],
        Sysno::mknodat => &[
            Argument {
                ty: "int",
                name: "dfd",
            },
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "umode_t",
                name: "mode",
            },
            Argument {
                ty: "unsigned int",
                name: "dev",
            },
        ],
        Sysno::fchownat => &[
            Argument {
                ty: "int",
                name: "dfd",
            },
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "uid_t",
                name: "user",
            },
            Argument {
                ty: "gid_t",
                name: "group",
            },
            Argument {
                ty: "int",
                name: "flag",
            },
        ],
        Sysno::futimesat => &[
            Argument {
                ty: "int",
                name: "dfd",
            },
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "struct __kernel_old_timeval __user *",
                name: "utimes",
            },
        ],
        Sysno::fstatat64 => &[
            Argument {
                ty: "int",
                name: "dfd",
            },
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "struct stat64 __user *",
                name: "statbuf",
            },
            Argument {
                ty: "int",
                name: "flag",
            },
        ],
        Sysno::unlinkat => &[
            Argument {
                ty: "int",
                name: "dfd",
            },
            Argument {
                ty: "const char __user *",
                name: "pathname",
            },
            Argument {
                ty: "int",
                name: "flag",
            },
        ],
        Sysno::renameat => &[
            Argument {
                ty: "int",
                name: "olddfd",
            },
            Argument {
                ty: "const char __user *",
                name: "oldname",
            },
            Argument {
                ty: "int",
                name: "newdfd",
            },
            Argument {
                ty: "const char __user *",
                name: "newname",
            },
        ],
        Sysno::linkat => &[
            Argument {
                ty: "int",
                name: "olddfd",
            },
            Argument {
                ty: "const char __user *",
                name: "oldname",
            },
            Argument {
                ty: "int",
                name: "newdfd",
            },
            Argument {
                ty: "const char __user *",
                name: "newname",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::symlinkat => &[
            Argument {
                ty: "const char __user *",
                name: "oldname",
            },
            Argument {
                ty: "int",
                name: "newdfd",
            },
            Argument {
                ty: "const char __user *",
                name: "newname",
            },
        ],
        Sysno::readlinkat => &[
            Argument {
                ty: "int",
                name: "dfd",
            },
            Argument {
                ty: "const char __user *",
                name: "pathname",
            },
            Argument {
                ty: "char __user *",
                name: "buf",
            },
            Argument {
                ty: "int",
                name: "bufsiz",
            },
        ],
        Sysno::fchmodat => &[
            Argument {
                ty: "int",
                name: "dfd",
            },
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "umode_t",
                name: "mode",
            },
        ],
        Sysno::faccessat => &[
            Argument {
                ty: "int",
                name: "dfd",
            },
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "int",
                name: "mode",
            },
        ],
        Sysno::pselect6 => &[
            Argument {
                ty: "int",
                name: "n",
            },
            Argument {
                ty: "fd_set __user *",
                name: "inp",
            },
            Argument {
                ty: "fd_set __user *",
                name: "outp",
            },
            Argument {
                ty: "fd_set __user *",
                name: "exp",
            },
            Argument {
                ty: "struct __kernel_timespec __user *",
                name: "tsp",
            },
            Argument {
                ty: "void __user *",
                name: "sig",
            },
        ],
        Sysno::ppoll => &[
            Argument {
                ty: "struct pollfd __user *",
                name: "ufds",
            },
            Argument {
                ty: "unsigned int",
                name: "nfds",
            },
            Argument {
                ty: "struct __kernel_timespec __user *",
                name: "tsp",
            },
            Argument {
                ty: "const sigset_t __user *",
                name: "sigmask",
            },
            Argument {
                ty: "size_t",
                name: "sigsetsize",
            },
        ],
        Sysno::unshare => &[
            Argument {
                ty: "unsigned long",
                name: "unshare_flags",
            },
        ],
        Sysno::set_robust_list => &[
            Argument {
                ty: "struct robust_list_head __user *",
                name: "head",
            },
            Argument {
                ty: "size_t",
                name: "len",
            },
        ],
        Sysno::get_robust_list => &[
            Argument {
                ty: "int",
                name: "pid",
            },
            Argument {
                ty: "struct robust_list_head __user * __user *",
                name: "head_ptr",
            },
            Argument {
                ty: "size_t __user *",
                name: "len_ptr",
            },
        ],
        Sysno::splice => &[
            Argument {
                ty: "int",
                name: "fd_in",
            },
            Argument {
                ty: "loff_t __user *",
                name: "off_in",
            },
            Argument {
                ty: "int",
                name: "fd_out",
            },
            Argument {
                ty: "loff_t __user *",
                name: "off_out",
            },
            Argument {
                ty: "size_t",
                name: "len",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::tee => &[
            Argument {
                ty: "int",
                name: "fdin",
            },
            Argument {
                ty: "int",
                name: "fdout",
            },
            Argument {
                ty: "size_t",
                name: "len",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::vmsplice => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "const struct iovec __user *",
                name: "uiov",
            },
            Argument {
                ty: "unsigned long",
                name: "nr_segs",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::move_pages => &[
            Argument {
                ty: "pid_t",
                name: "pid",
            },
            Argument {
                ty: "unsigned long",
                name: "nr_pages",
            },
            Argument {
                ty: "const void __user * __user *",
                name: "pages",
            },
            Argument {
                ty: "const int __user *",
                name: "nodes",
            },
            Argument {
                ty: "int __user *",
                name: "status",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::getcpu => &[
            Argument {
                ty: "unsigned __user *",
                name: "cpup",
            },
            Argument {
                ty: "unsigned __user *",
                name: "nodep",
            },
            Argument {
                ty: "struct getcpu_cache __user *",
                name: "unused",
            },
        ],
        Sysno::epoll_pwait => &[
            Argument {
                ty: "int",
                name: "epfd",
            },
            Argument {
                ty: "struct epoll_event __user *",
                name: "events",
            },
            Argument {
                ty: "int",
                name: "maxevents",
            },
            Argument {
                ty: "int",
                name: "timeout",
            },
            Argument {
                ty: "const sigset_t __user *",
                name: "sigmask",
            },
            Argument {
                ty: "size_t",
                name: "sigsetsize",
            },
        ],
        Sysno::kexec_load => &[
            Argument {
                ty: "unsigned long",
                name: "entry",
            },
            Argument {
                ty: "unsigned long",
                name: "nr_segments",
            },
            Argument {
                ty: "struct kexec_segment __user *",
                name: "segments",
            },
            Argument {
                ty: "unsigned long",
                name: "flags",
            },
        ],
        Sysno::utimensat => &[
            Argument {
                ty: "int",
                name: "dfd",
            },
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "struct __kernel_timespec __user *",
                name: "utimes",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::signalfd => &[
            Argument {
                ty: "int",
                name: "ufd",
            },
            Argument {
                ty: "sigset_t __user *",
                name: "user_mask",
            },
            Argument {
                ty: "size_t",
                name: "sizemask",
            },
        ],
        Sysno::timerfd_create => &[
            Argument {
                ty: "int",
                name: "clockid",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::eventfd => &[
            Argument {
                ty: "unsigned int",
                name: "count",
            },
        ],
        Sysno::fallocate => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "int",
                name: "mode",
            },
            Argument {
                ty: "loff_t",
                name: "offset",
            },
            Argument {
                ty: "loff_t",
                name: "len",
            },
        ],
        Sysno::timerfd_settime => &[
            Argument {
                ty: "int",
                name: "ufd",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
            Argument {
                ty: "const struct __kernel_itimerspec __user *",
                name: "utmr",
            },
            Argument {
                ty: "struct __kernel_itimerspec __user *",
                name: "otmr",
            },
        ],
        Sysno::timerfd_gettime => &[
            Argument {
                ty: "int",
                name: "ufd",
            },
            Argument {
                ty: "struct __kernel_itimerspec __user *",
                name: "otmr",
            },
        ],
        Sysno::signalfd4 => &[
            Argument {
                ty: "int",
                name: "ufd",
            },
            Argument {
                ty: "sigset_t __user *",
                name: "user_mask",
            },
            Argument {
                ty: "size_t",
                name: "sizemask",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::eventfd2 => &[
            Argument {
                ty: "unsigned int",
                name: "count",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::epoll_create1 => &[
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::dup3 => &[
            Argument {
                ty: "unsigned int",
                name: "oldfd",
            },
            Argument {
                ty: "unsigned int",
                name: "newfd",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::pipe2 => &[
            Argument {
                ty: "int __user *",
                name: "fildes",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::inotify_init1 => &[
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::preadv => &[
            Argument {
                ty: "unsigned long",
                name: "fd",
            },
            Argument {
                ty: "const struct iovec __user *",
                name: "vec",
            },
            Argument {
                ty: "unsigned long",
                name: "vlen",
            },
            Argument {
                ty: "unsigned long",
                name: "pos_l",
            },
            Argument {
                ty: "unsigned long",
                name: "pos_h",
            },
        ],
        Sysno::pwritev => &[
            Argument {
                ty: "unsigned long",
                name: "fd",
            },
            Argument {
                ty: "const struct iovec __user *",
                name: "vec",
            },
            Argument {
                ty: "unsigned long",
                name: "vlen",
            },
            Argument {
                ty: "unsigned long",
                name: "pos_l",
            },
            Argument {
                ty: "unsigned long",
                name: "pos_h",
            },
        ],
        Sysno::rt_tgsigqueueinfo => &[
            Argument {
                ty: "pid_t",
                name: "tgid",
            },
            Argument {
                ty: "pid_t",
                name: "pid",
            },
            Argument {
                ty: "int",
                name: "sig",
            },
            Argument {
                ty: "siginfo_t __user *",
                name: "uinfo",
            },
        ],
        Sysno::perf_event_open => &[
            Argument {
                ty: "struct perf_event_attr __user *",
                name: "attr_uptr",
            },
            Argument {
                ty: "pid_t",
                name: "pid",
            },
            Argument {
                ty: "int",
                name: "cpu",
            },
            Argument {
                ty: "int",
                name: "group_fd",
            },
            Argument {
                ty: "unsigned long",
                name: "flags",
            },
        ],
        Sysno::recvmmsg => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "struct mmsghdr __user *",
                name: "mmsg",
            },
            Argument {
                ty: "unsigned int",
                name: "vlen",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
            Argument {
                ty: "struct __kernel_timespec __user *",
                name: "timeout",
            },
        ],
        Sysno::accept4 => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "struct sockaddr __user *",
                name: "upeer_sockaddr",
            },
            Argument {
                ty: "int __user *",
                name: "upeer_addrlen",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::fanotify_init => &[
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
            Argument {
                ty: "unsigned int",
                name: "event_f_flags",
            },
        ],
        Sysno::fanotify_mark => &[
            Argument {
                ty: "int",
                name: "fanotify_fd",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
            Argument {
                ty: "__u64",
                name: "mask",
            },
            Argument {
                ty: "int",
                name: "dfd",
            },
            Argument {
                ty: "const char  __user *",
                name: "pathname",
            },
        ],
        Sysno::prlimit64 => &[
            Argument {
                ty: "pid_t",
                name: "pid",
            },
            Argument {
                ty: "unsigned int",
                name: "resource",
            },
            Argument {
                ty: "const struct rlimit64 __user *",
                name: "new_rlim",
            },
            Argument {
                ty: "struct rlimit64 __user *",
                name: "old_rlim",
            },
        ],
        Sysno::name_to_handle_at => &[
            Argument {
                ty: "int",
                name: "dfd",
            },
            Argument {
                ty: "const char __user *",
                name: "name",
            },
            Argument {
                ty: "struct file_handle __user *",
                name: "handle",
            },
            Argument {
                ty: "int __user *",
                name: "mnt_id",
            },
            Argument {
                ty: "int",
                name: "flag",
            },
        ],
        Sysno::open_by_handle_at => &[
            Argument {
                ty: "int",
                name: "mountdirfd",
            },
            Argument {
                ty: "struct file_handle __user *",
                name: "handle",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::clock_adjtime => &[
            Argument {
                ty: "const clockid_t",
                name: "which_clock",
            },
            Argument {
                ty: "struct __kernel_timex __user *",
                name: "utx",
            },
        ],
        Sysno::syncfs => &[
            Argument {
                ty: "int",
                name: "fd",
            },
        ],
        Sysno::sendmmsg => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "struct mmsghdr __user *",
                name: "mmsg",
            },
            Argument {
                ty: "unsigned int",
                name: "vlen",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::setns => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::process_vm_readv => &[
            Argument {
                ty: "pid_t",
                name: "pid",
            },
            Argument {
                ty: "const struct iovec __user *",
                name: "lvec",
            },
            Argument {
                ty: "unsigned long",
                name: "liovcnt",
            },
            Argument {
                ty: "const struct iovec __user *",
                name: "rvec",
            },
            Argument {
                ty: "unsigned long",
                name: "riovcnt",
            },
            Argument {
                ty: "unsigned long",
                name: "flags",
            },
        ],
        Sysno::process_vm_writev => &[
            Argument {
                ty: "pid_t",
                name: "pid",
            },
            Argument {
                ty: "const struct iovec __user *",
                name: "lvec",
            },
            Argument {
                ty: "unsigned long",
                name: "liovcnt",
            },
            Argument {
                ty: "const struct iovec __user *",
                name: "rvec",
            },
            Argument {
                ty: "unsigned long",
                name: "riovcnt",
            },
            Argument {
                ty: "unsigned long",
                name: "flags",
            },
        ],
        Sysno::kcmp => &[
            Argument {
                ty: "pid_t",
                name: "pid1",
            },
            Argument {
                ty: "pid_t",
                name: "pid2",
            },
            Argument {
                ty: "int",
                name: "type",
            },
            Argument {
                ty: "unsigned long",
                name: "idx1",
            },
            Argument {
                ty: "unsigned long",
                name: "idx2",
            },
        ],
        Sysno::finit_module => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "const char __user *",
                name: "uargs",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::sched_setattr => &[
            Argument {
                ty: "pid_t",
                name: "pid",
            },
            Argument {
                ty: "struct sched_attr __user *",
                name: "uattr",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::sched_getattr => &[
            Argument {
                ty: "pid_t",
                name: "pid",
            },
            Argument {
                ty: "struct sched_attr __user *",
                name: "uattr",
            },
            Argument {
                ty: "unsigned int",
                name: "usize",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::renameat2 => &[
            Argument {
                ty: "int",
                name: "olddfd",
            },
            Argument {
                ty: "const char __user *",
                name: "oldname",
            },
            Argument {
                ty: "int",
                name: "newdfd",
            },
            Argument {
                ty: "const char __user *",
                name: "newname",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::seccomp => &[
            Argument {
                ty: "unsigned int",
                name: "op",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
            Argument {
                ty: "void __user *",
                name: "uargs",
            },
        ],
        Sysno::getrandom => &[
            Argument {
                ty: "char __user *",
                name: "buf",
            },
            Argument {
                ty: "size_t",
                name: "count",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::memfd_create => &[
            Argument {
                ty: "const char __user *",
                name: "uname",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::bpf => &[
            Argument {
                ty: "int",
                name: "cmd",
            },
            Argument {
                ty: "union bpf_attr __user *",
                name: "uattr",
            },
            Argument {
                ty: "unsigned int",
                name: "size",
            },
        ],
        Sysno::execveat => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "const char __user *const __user *",
                name: "argv",
            },
            Argument {
                ty: "const char __user *const __user *",
                name: "envp",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::userfaultfd => &[
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::membarrier => &[
            Argument {
                ty: "int",
                name: "cmd",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
            Argument {
                ty: "int",
                name: "cpu_id",
            },
        ],
        Sysno::mlock2 => &[
            Argument {
                ty: "unsigned long",
                name: "start",
            },
            Argument {
                ty: "size_t",
                name: "len",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::copy_file_range => &[
            Argument {
                ty: "int",
                name: "fd_in",
            },
            Argument {
                ty: "loff_t __user *",
                name: "off_in",
            },
            Argument {
                ty: "int",
                name: "fd_out",
            },
            Argument {
                ty: "loff_t __user *",
                name: "off_out",
            },
            Argument {
                ty: "size_t",
                name: "len",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::preadv2 => &[
            Argument {
                ty: "unsigned long",
                name: "fd",
            },
            Argument {
                ty: "const struct iovec __user *",
                name: "vec",
            },
            Argument {
                ty: "unsigned long",
                name: "vlen",
            },
            Argument {
                ty: "unsigned long",
                name: "pos_l",
            },
            Argument {
                ty: "unsigned long",
                name: "pos_h",
            },
            Argument {
                ty: "rwf_t",
                name: "flags",
            },
        ],
        Sysno::pwritev2 => &[
            Argument {
                ty: "unsigned long",
                name: "fd",
            },
            Argument {
                ty: "const struct iovec __user *",
                name: "vec",
            },
            Argument {
                ty: "unsigned long",
                name: "vlen",
            },
            Argument {
                ty: "unsigned long",
                name: "pos_l",
            },
            Argument {
                ty: "unsigned long",
                name: "pos_h",
            },
            Argument {
                ty: "rwf_t",
                name: "flags",
            },
        ],
        Sysno::pkey_mprotect => &[
            Argument {
                ty: "unsigned long",
                name: "start",
            },
            Argument {
                ty: "size_t",
                name: "len",
            },
            Argument {
                ty: "unsigned long",
                name: "prot",
            },
            Argument {
                ty: "int",
                name: "pkey",
            },
        ],
        Sysno::pkey_alloc => &[
            Argument {
                ty: "unsigned long",
                name: "flags",
            },
            Argument {
                ty: "unsigned long",
                name: "init_val",
            },
        ],
        Sysno::pkey_free => &[
            Argument {
                ty: "int",
                name: "pkey",
            },
        ],
        Sysno::statx => &[
            Argument {
                ty: "int",
                name: "dfd",
            },
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "unsigned",
                name: "flags",
            },
            Argument {
                ty: "unsigned int",
                name: "mask",
            },
            Argument {
                ty: "struct statx __user *",
                name: "buffer",
            },
        ],
        Sysno::rseq => &[
            Argument {
                ty: "struct rseq __user *",
                name: "rseq",
            },
            Argument {
                ty: "u32",
                name: "rseq_len",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
            Argument {
                ty: "u32",
                name: "sig",
            },
        ],
        Sysno::io_pgetevents => &[
            Argument {
                ty: "aio_context_t",
                name: "ctx_id",
            },
            Argument {
                ty: "long",
                name: "min_nr",
            },
            Argument {
                ty: "long",
                name: "nr",
            },
            Argument {
                ty: "struct io_event __user *",
                name: "events",
            },
            Argument {
                ty: "struct __kernel_timespec __user *",
                name: "timeout",
            },
            Argument {
                ty: "const struct __aio_sigset __user *",
                name: "usig",
            },
        ],
        Sysno::migrate_pages => &[
            Argument {
                ty: "pid_t",
                name: "pid",
            },
            Argument {
                ty: "unsigned long",
                name: "maxnode",
            },
            Argument {
                ty: "const unsigned long __user *",
                name: "old_nodes",
            },
            Argument {
                ty: "const unsigned long __user *",
                name: "new_nodes",
            },
        ],
        Sysno::kexec_file_load => &[
            Argument {
                ty: "int",
                name: "kernel_fd",
            },
            Argument {
                ty: "int",
                name: "initrd_fd",
            },
            Argument {
                ty: "unsigned long",
                name: "cmdline_len",
            },
            Argument {
                ty: "const char __user *",
                name: "cmdline_ptr",
            },
            Argument {
                ty: "unsigned long",
                name: "flags",
            },
        ],
        Sysno::pidfd_send_signal => &[
            Argument {
                ty: "int",
                name: "pidfd",
            },
            Argument {
                ty: "int",
                name: "sig",
            },
            Argument {
                ty: "siginfo_t __user *",
                name: "info",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::io_uring_setup => &[
            Argument {
                ty: "u32",
                name: "entries",
            },
            Argument {
                ty: "struct io_uring_params __user *",
                name: "params",
            },
        ],
        Sysno::io_uring_enter => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
            Argument {
                ty: "u32",
                name: "to_submit",
            },
            Argument {
                ty: "u32",
                name: "min_complete",
            },
            Argument {
                ty: "u32",
                name: "flags",
            },
            Argument {
                ty: "const void __user *",
                name: "argp",
            },
            Argument {
                ty: "size_t",
                name: "argsz",
            },
        ],
        Sysno::io_uring_register => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
            Argument {
                ty: "unsigned int",
                name: "opcode",
            },
            Argument {
                ty: "void __user *",
                name: "arg",
            },
            Argument {
                ty: "unsigned int",
                name: "nr_args",
            },
        ],
        Sysno::open_tree => &[
            Argument {
                ty: "int",
                name: "dfd",
            },
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "unsigned",
                name: "flags",
            },
        ],
        Sysno::move_mount => &[
            Argument {
                ty: "int",
                name: "from_dfd",
            },
            Argument {
                ty: "const char __user *",
                name: "from_pathname",
            },
            Argument {
                ty: "int",
                name: "to_dfd",
            },
            Argument {
                ty: "const char __user *",
                name: "to_pathname",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::fsopen => &[
            Argument {
                ty: "const char __user *",
                name: "_fs_name",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::fsconfig => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "unsigned int",
                name: "cmd",
            },
            Argument {
                ty: "const char __user *",
                name: "_key",
            },
            Argument {
                ty: "const void __user *",
                name: "_value",
            },
            Argument {
                ty: "int",
                name: "aux",
            },
        ],
        Sysno::fsmount => &[
            Argument {
                ty: "int",
                name: "fs_fd",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
            Argument {
                ty: "unsigned int",
                name: "attr_flags",
            },
        ],
        Sysno::fspick => &[
            Argument {
                ty: "int",
                name: "dfd",
            },
            Argument {
                ty: "const char __user *",
                name: "path",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::pidfd_open => &[
            Argument {
                ty: "pid_t",
                name: "pid",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::clone3 => &[
            Argument {
                ty: "struct clone_args __user *",
                name: "uargs",
            },
            Argument {
                ty: "size_t",
                name: "size",
            },
        ],
        Sysno::close_range => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
            Argument {
                ty: "unsigned int",
                name: "max_fd",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::openat2 => &[
            Argument {
                ty: "int",
                name: "dfd",
            },
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "struct open_how __user *",
                name: "how",
            },
            Argument {
                ty: "size_t",
                name: "usize",
            },
        ],
        Sysno::pidfd_getfd => &[
            Argument {
                ty: "int",
                name: "pidfd",
            },
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::faccessat2 => &[
            Argument {
                ty: "int",
                name: "dfd",
            },
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "int",
                name: "mode",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::process_madvise => &[
            Argument {
                ty: "int",
                name: "pidfd",
            },
            Argument {
                ty: "const struct iovec __user *",
                name: "vec",
            },
            Argument {
                ty: "size_t",
                name: "vlen",
            },
            Argument {
                ty: "int",
                name: "behavior",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::epoll_pwait2 => &[
            Argument {
                ty: "int",
                name: "epfd",
            },
            Argument {
                ty: "struct epoll_event __user *",
                name: "events",
            },
            Argument {
                ty: "int",
                name: "maxevents",
            },
            Argument {
                ty: "const struct __kernel_timespec __user *",
                name: "timeout",
            },
            Argument {
                ty: "const sigset_t __user *",
                name: "sigmask",
            },
            Argument {
                ty: "size_t",
                name: "sigsetsize",
            },
        ],
        Sysno::mount_setattr => &[
            Argument {
                ty: "int",
                name: "dfd",
            },
            Argument {
                ty: "const char __user *",
                name: "path",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
            Argument {
                ty: "struct mount_attr __user *",
                name: "uattr",
            },
            Argument {
                ty: "size_t",
                name: "usize",
            },
        ],
        Sysno::quotactl_path => &[
            Argument {
                ty: "unsigned int",
                name: "cmd",
            },
            Argument {
                ty: "const char __user *",
                name: "mountpoint",
            },
            Argument {
                ty: "qid_t",
                name: "id",
            },
            Argument {
                ty: "void __user *",
                name: "addr",
            },
        ],
        Sysno::landlock_create_ruleset => &[
            Argument {
                ty: "const struct landlock_ruleset_attr __user *const",
                name: "attr",
            },
            Argument {
                ty: "const size_t",
                name: "size",
            },
            Argument {
                ty: "const __u32",
                name: "flags",
            },
        ],
        Sysno::landlock_add_rule => &[
            Argument {
                ty: "const int",
                name: "ruleset_fd",
            },
            Argument {
                ty: "const enum landlock_rule_type",
                name: "rule_type",
            },
            Argument {
                ty: "const void __user *const",
                name: "rule_attr",
            },
            Argument {
                ty: "const __u32",
                name: "flags",
            },
        ],
        Sysno::landlock_restrict_self => &[
            Argument {
                ty: "const int",
                name: "ruleset_fd",
            },
            Argument {
                ty: "const __u32",
                name: "flags",
            },
        ],
        _ => &[],
    }
}
