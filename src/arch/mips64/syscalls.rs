//! Syscalls for the mips64 architecture.

// This file is automatically generated. Do not edit!

use super::super::Argument;

syscall_enum! {
    pub enum Sysno {
        read = 5000,
        write = 5001,
        open = 5002,
        close = 5003,
        stat = 5004,
        fstat = 5005,
        lstat = 5006,
        poll = 5007,
        lseek = 5008,
        mmap = 5009,
        mprotect = 5010,
        munmap = 5011,
        brk = 5012,
        rt_sigaction = 5013,
        rt_sigprocmask = 5014,
        ioctl = 5015,
        pread64 = 5016,
        pwrite64 = 5017,
        readv = 5018,
        writev = 5019,
        access = 5020,
        pipe = 5021,
        _newselect = 5022,
        sched_yield = 5023,
        mremap = 5024,
        msync = 5025,
        mincore = 5026,
        madvise = 5027,
        shmget = 5028,
        shmat = 5029,
        shmctl = 5030,
        dup = 5031,
        dup2 = 5032,
        pause = 5033,
        nanosleep = 5034,
        getitimer = 5035,
        setitimer = 5036,
        alarm = 5037,
        getpid = 5038,
        sendfile = 5039,
        socket = 5040,
        connect = 5041,
        accept = 5042,
        sendto = 5043,
        recvfrom = 5044,
        sendmsg = 5045,
        recvmsg = 5046,
        shutdown = 5047,
        bind = 5048,
        listen = 5049,
        getsockname = 5050,
        getpeername = 5051,
        socketpair = 5052,
        setsockopt = 5053,
        getsockopt = 5054,
        clone = 5055,
        fork = 5056,
        execve = 5057,
        exit = 5058,
        wait4 = 5059,
        kill = 5060,
        uname = 5061,
        semget = 5062,
        semop = 5063,
        semctl = 5064,
        shmdt = 5065,
        msgget = 5066,
        msgsnd = 5067,
        msgrcv = 5068,
        msgctl = 5069,
        fcntl = 5070,
        flock = 5071,
        fsync = 5072,
        fdatasync = 5073,
        truncate = 5074,
        ftruncate = 5075,
        getdents = 5076,
        getcwd = 5077,
        chdir = 5078,
        fchdir = 5079,
        rename = 5080,
        mkdir = 5081,
        rmdir = 5082,
        creat = 5083,
        link = 5084,
        unlink = 5085,
        symlink = 5086,
        readlink = 5087,
        chmod = 5088,
        fchmod = 5089,
        chown = 5090,
        fchown = 5091,
        lchown = 5092,
        umask = 5093,
        gettimeofday = 5094,
        getrlimit = 5095,
        getrusage = 5096,
        sysinfo = 5097,
        times = 5098,
        ptrace = 5099,
        getuid = 5100,
        syslog = 5101,
        getgid = 5102,
        setuid = 5103,
        setgid = 5104,
        geteuid = 5105,
        getegid = 5106,
        setpgid = 5107,
        getppid = 5108,
        getpgrp = 5109,
        setsid = 5110,
        setreuid = 5111,
        setregid = 5112,
        getgroups = 5113,
        setgroups = 5114,
        setresuid = 5115,
        getresuid = 5116,
        setresgid = 5117,
        getresgid = 5118,
        getpgid = 5119,
        setfsuid = 5120,
        setfsgid = 5121,
        getsid = 5122,
        capget = 5123,
        capset = 5124,
        rt_sigpending = 5125,
        rt_sigtimedwait = 5126,
        rt_sigqueueinfo = 5127,
        rt_sigsuspend = 5128,
        sigaltstack = 5129,
        utime = 5130,
        mknod = 5131,
        personality = 5132,
        ustat = 5133,
        statfs = 5134,
        fstatfs = 5135,
        sysfs = 5136,
        getpriority = 5137,
        setpriority = 5138,
        sched_setparam = 5139,
        sched_getparam = 5140,
        sched_setscheduler = 5141,
        sched_getscheduler = 5142,
        sched_get_priority_max = 5143,
        sched_get_priority_min = 5144,
        sched_rr_get_interval = 5145,
        mlock = 5146,
        munlock = 5147,
        mlockall = 5148,
        munlockall = 5149,
        vhangup = 5150,
        pivot_root = 5151,
        _sysctl = 5152,
        prctl = 5153,
        adjtimex = 5154,
        setrlimit = 5155,
        chroot = 5156,
        sync = 5157,
        acct = 5158,
        settimeofday = 5159,
        mount = 5160,
        umount2 = 5161,
        swapon = 5162,
        swapoff = 5163,
        reboot = 5164,
        sethostname = 5165,
        setdomainname = 5166,
        create_module = 5167,
        init_module = 5168,
        delete_module = 5169,
        get_kernel_syms = 5170,
        query_module = 5171,
        quotactl = 5172,
        nfsservctl = 5173,
        getpmsg = 5174,
        putpmsg = 5175,
        afs_syscall = 5176,
        reserved177 = 5177,
        gettid = 5178,
        readahead = 5179,
        setxattr = 5180,
        lsetxattr = 5181,
        fsetxattr = 5182,
        getxattr = 5183,
        lgetxattr = 5184,
        fgetxattr = 5185,
        listxattr = 5186,
        llistxattr = 5187,
        flistxattr = 5188,
        removexattr = 5189,
        lremovexattr = 5190,
        fremovexattr = 5191,
        tkill = 5192,
        reserved193 = 5193,
        futex = 5194,
        sched_setaffinity = 5195,
        sched_getaffinity = 5196,
        cacheflush = 5197,
        cachectl = 5198,
        sysmips = 5199,
        io_setup = 5200,
        io_destroy = 5201,
        io_getevents = 5202,
        io_submit = 5203,
        io_cancel = 5204,
        exit_group = 5205,
        lookup_dcookie = 5206,
        epoll_create = 5207,
        epoll_ctl = 5208,
        epoll_wait = 5209,
        remap_file_pages = 5210,
        rt_sigreturn = 5211,
        set_tid_address = 5212,
        restart_syscall = 5213,
        semtimedop = 5214,
        fadvise64 = 5215,
        timer_create = 5216,
        timer_settime = 5217,
        timer_gettime = 5218,
        timer_getoverrun = 5219,
        timer_delete = 5220,
        clock_settime = 5221,
        clock_gettime = 5222,
        clock_getres = 5223,
        clock_nanosleep = 5224,
        tgkill = 5225,
        utimes = 5226,
        mbind = 5227,
        get_mempolicy = 5228,
        set_mempolicy = 5229,
        mq_open = 5230,
        mq_unlink = 5231,
        mq_timedsend = 5232,
        mq_timedreceive = 5233,
        mq_notify = 5234,
        mq_getsetattr = 5235,
        vserver = 5236,
        waitid = 5237,
        add_key = 5239,
        request_key = 5240,
        keyctl = 5241,
        set_thread_area = 5242,
        inotify_init = 5243,
        inotify_add_watch = 5244,
        inotify_rm_watch = 5245,
        migrate_pages = 5246,
        openat = 5247,
        mkdirat = 5248,
        mknodat = 5249,
        fchownat = 5250,
        futimesat = 5251,
        newfstatat = 5252,
        unlinkat = 5253,
        renameat = 5254,
        linkat = 5255,
        symlinkat = 5256,
        readlinkat = 5257,
        fchmodat = 5258,
        faccessat = 5259,
        pselect6 = 5260,
        ppoll = 5261,
        unshare = 5262,
        splice = 5263,
        sync_file_range = 5264,
        tee = 5265,
        vmsplice = 5266,
        move_pages = 5267,
        set_robust_list = 5268,
        get_robust_list = 5269,
        kexec_load = 5270,
        getcpu = 5271,
        epoll_pwait = 5272,
        ioprio_set = 5273,
        ioprio_get = 5274,
        utimensat = 5275,
        signalfd = 5276,
        timerfd = 5277,
        eventfd = 5278,
        fallocate = 5279,
        timerfd_create = 5280,
        timerfd_gettime = 5281,
        timerfd_settime = 5282,
        signalfd4 = 5283,
        eventfd2 = 5284,
        epoll_create1 = 5285,
        dup3 = 5286,
        pipe2 = 5287,
        inotify_init1 = 5288,
        preadv = 5289,
        pwritev = 5290,
        rt_tgsigqueueinfo = 5291,
        perf_event_open = 5292,
        accept4 = 5293,
        recvmmsg = 5294,
        fanotify_init = 5295,
        fanotify_mark = 5296,
        prlimit64 = 5297,
        name_to_handle_at = 5298,
        open_by_handle_at = 5299,
        clock_adjtime = 5300,
        syncfs = 5301,
        sendmmsg = 5302,
        setns = 5303,
        process_vm_readv = 5304,
        process_vm_writev = 5305,
        kcmp = 5306,
        finit_module = 5307,
        getdents64 = 5308,
        sched_setattr = 5309,
        sched_getattr = 5310,
        renameat2 = 5311,
        seccomp = 5312,
        getrandom = 5313,
        memfd_create = 5314,
        bpf = 5315,
        execveat = 5316,
        userfaultfd = 5317,
        membarrier = 5318,
        mlock2 = 5319,
        copy_file_range = 5320,
        preadv2 = 5321,
        pwritev2 = 5322,
        pkey_mprotect = 5323,
        pkey_alloc = 5324,
        pkey_free = 5325,
        statx = 5326,
        rseq = 5327,
        io_pgetevents = 5328,
        pidfd_send_signal = 5424,
        io_uring_setup = 5425,
        io_uring_enter = 5426,
        io_uring_register = 5427,
        open_tree = 5428,
        move_mount = 5429,
        fsopen = 5430,
        fsconfig = 5431,
        fsmount = 5432,
        fspick = 5433,
        pidfd_open = 5434,
        clone3 = 5435,
        close_range = 5436,
        openat2 = 5437,
        pidfd_getfd = 5438,
        faccessat2 = 5439,
        process_madvise = 5440,
        epoll_pwait2 = 5441,
        mount_setattr = 5442,
        quotactl_path = 5443,
        landlock_create_ruleset = 5444,
        landlock_add_rule = 5445,
        landlock_restrict_self = 5446,
    }
    LAST: landlock_restrict_self;
}

fn lookup_definition(sysno: Sysno) -> &'static [Argument<'static>] {
    match sysno {
        Sysno::read => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
            Argument {
                ty: "char __user *",
                name: "buf",
            },
            Argument {
                ty: "size_t",
                name: "count",
            },
        ],
        Sysno::write => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
            Argument {
                ty: "const char __user *",
                name: "buf",
            },
            Argument {
                ty: "size_t",
                name: "count",
            },
        ],
        Sysno::open => &[
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
            Argument {
                ty: "umode_t",
                name: "mode",
            },
        ],
        Sysno::close => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
        ],
        Sysno::stat => &[
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "struct __old_kernel_stat __user *",
                name: "statbuf",
            },
        ],
        Sysno::fstat => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
            Argument {
                ty: "struct __old_kernel_stat __user *",
                name: "statbuf",
            },
        ],
        Sysno::lstat => &[
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "struct __old_kernel_stat __user *",
                name: "statbuf",
            },
        ],
        Sysno::poll => &[
            Argument {
                ty: "struct pollfd __user *",
                name: "ufds",
            },
            Argument {
                ty: "unsigned int",
                name: "nfds",
            },
            Argument {
                ty: "int",
                name: "timeout_msecs",
            },
        ],
        Sysno::lseek => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
            Argument {
                ty: "off_t",
                name: "offset",
            },
            Argument {
                ty: "unsigned int",
                name: "whence",
            },
        ],
        Sysno::mmap => &[
            Argument {
                ty: "unsigned long",
                name: "addr",
            },
            Argument {
                ty: "unsigned long",
                name: "len",
            },
            Argument {
                ty: "unsigned long",
                name: "prot",
            },
            Argument {
                ty: "unsigned long",
                name: "flags",
            },
            Argument {
                ty: "unsigned long",
                name: "fd",
            },
            Argument {
                ty: "unsigned long",
                name: "off",
            },
        ],
        Sysno::mprotect => &[
            Argument {
                ty: "unsigned long",
                name: "start",
            },
            Argument {
                ty: "size_t",
                name: "len",
            },
            Argument {
                ty: "unsigned long",
                name: "prot",
            },
        ],
        Sysno::munmap => &[
            Argument {
                ty: "unsigned long",
                name: "addr",
            },
            Argument {
                ty: "size_t",
                name: "len",
            },
        ],
        Sysno::brk => &[
            Argument {
                ty: "unsigned long",
                name: "brk",
            },
        ],
        Sysno::rt_sigaction => &[
            Argument {
                ty: "int",
                name: "sig",
            },
            Argument {
                ty: "const struct sigaction __user *",
                name: "act",
            },
            Argument {
                ty: "struct sigaction __user *",
                name: "oact",
            },
            Argument {
                ty: "size_t",
                name: "sigsetsize",
            },
        ],
        Sysno::rt_sigprocmask => &[
            Argument {
                ty: "int",
                name: "how",
            },
            Argument {
                ty: "sigset_t __user *",
                name: "nset",
            },
            Argument {
                ty: "sigset_t __user *",
                name: "oset",
            },
            Argument {
                ty: "size_t",
                name: "sigsetsize",
            },
        ],
        Sysno::ioctl => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
            Argument {
                ty: "unsigned int",
                name: "cmd",
            },
            Argument {
                ty: "unsigned long",
                name: "arg",
            },
        ],
        Sysno::pread64 => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
            Argument {
                ty: "char __user *",
                name: "buf",
            },
            Argument {
                ty: "size_t",
                name: "count",
            },
            Argument {
                ty: "loff_t",
                name: "pos",
            },
        ],
        Sysno::pwrite64 => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
            Argument {
                ty: "const char __user *",
                name: "buf",
            },
            Argument {
                ty: "size_t",
                name: "count",
            },
            Argument {
                ty: "loff_t",
                name: "pos",
            },
        ],
        Sysno::readv => &[
            Argument {
                ty: "unsigned long",
                name: "fd",
            },
            Argument {
                ty: "const struct iovec __user *",
                name: "vec",
            },
            Argument {
                ty: "unsigned long",
                name: "vlen",
            },
        ],
        Sysno::writev => &[
            Argument {
                ty: "unsigned long",
                name: "fd",
            },
            Argument {
                ty: "const struct iovec __user *",
                name: "vec",
            },
            Argument {
                ty: "unsigned long",
                name: "vlen",
            },
        ],
        Sysno::access => &[
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "int",
                name: "mode",
            },
        ],
        Sysno::pipe => &[
            Argument {
                ty: "int __user *",
                name: "fildes",
            },
        ],
        Sysno::sched_yield => &[
        ],
        Sysno::mremap => &[
            Argument {
                ty: "unsigned long",
                name: "addr",
            },
            Argument {
                ty: "unsigned long",
                name: "old_len",
            },
            Argument {
                ty: "unsigned long",
                name: "new_len",
            },
            Argument {
                ty: "unsigned long",
                name: "flags",
            },
            Argument {
                ty: "unsigned long",
                name: "new_addr",
            },
        ],
        Sysno::msync => &[
            Argument {
                ty: "unsigned long",
                name: "start",
            },
            Argument {
                ty: "size_t",
                name: "len",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::mincore => &[
            Argument {
                ty: "unsigned long",
                name: "start",
            },
            Argument {
                ty: "size_t",
                name: "len",
            },
            Argument {
                ty: "unsigned char __user *",
                name: "vec",
            },
        ],
        Sysno::madvise => &[
            Argument {
                ty: "unsigned long",
                name: "start",
            },
            Argument {
                ty: "size_t",
                name: "len_in",
            },
            Argument {
                ty: "int",
                name: "behavior",
            },
        ],
        Sysno::shmget => &[
            Argument {
                ty: "key_t",
                name: "key",
            },
            Argument {
                ty: "size_t",
                name: "size",
            },
            Argument {
                ty: "int",
                name: "shmflg",
            },
        ],
        Sysno::shmat => &[
            Argument {
                ty: "int",
                name: "shmid",
            },
            Argument {
                ty: "char __user *",
                name: "shmaddr",
            },
            Argument {
                ty: "int",
                name: "shmflg",
            },
        ],
        Sysno::shmctl => &[
            Argument {
                ty: "int",
                name: "shmid",
            },
            Argument {
                ty: "int",
                name: "cmd",
            },
            Argument {
                ty: "struct shmid_ds __user *",
                name: "buf",
            },
        ],
        Sysno::dup => &[
            Argument {
                ty: "unsigned int",
                name: "fildes",
            },
        ],
        Sysno::dup2 => &[
            Argument {
                ty: "unsigned int",
                name: "oldfd",
            },
            Argument {
                ty: "unsigned int",
                name: "newfd",
            },
        ],
        Sysno::pause => &[
        ],
        Sysno::nanosleep => &[
            Argument {
                ty: "struct __kernel_timespec __user *",
                name: "rqtp",
            },
            Argument {
                ty: "struct __kernel_timespec __user *",
                name: "rmtp",
            },
        ],
        Sysno::getitimer => &[
            Argument {
                ty: "int",
                name: "which",
            },
            Argument {
                ty: "struct __kernel_old_itimerval __user *",
                name: "value",
            },
        ],
        Sysno::setitimer => &[
            Argument {
                ty: "int",
                name: "which",
            },
            Argument {
                ty: "struct __kernel_old_itimerval __user *",
                name: "value",
            },
            Argument {
                ty: "struct __kernel_old_itimerval __user *",
                name: "ovalue",
            },
        ],
        Sysno::alarm => &[
            Argument {
                ty: "unsigned int",
                name: "seconds",
            },
        ],
        Sysno::getpid => &[
        ],
        Sysno::sendfile => &[
            Argument {
                ty: "int",
                name: "out_fd",
            },
            Argument {
                ty: "int",
                name: "in_fd",
            },
            Argument {
                ty: "off_t __user *",
                name: "offset",
            },
            Argument {
                ty: "size_t",
                name: "count",
            },
        ],
        Sysno::socket => &[
            Argument {
                ty: "int",
                name: "family",
            },
            Argument {
                ty: "int",
                name: "type",
            },
            Argument {
                ty: "int",
                name: "protocol",
            },
        ],
        Sysno::connect => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "struct sockaddr __user *",
                name: "uservaddr",
            },
            Argument {
                ty: "int",
                name: "addrlen",
            },
        ],
        Sysno::accept => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "struct sockaddr __user *",
                name: "upeer_sockaddr",
            },
            Argument {
                ty: "int __user *",
                name: "upeer_addrlen",
            },
        ],
        Sysno::sendto => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "void __user *",
                name: "buff",
            },
            Argument {
                ty: "size_t",
                name: "len",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
            Argument {
                ty: "struct sockaddr __user *",
                name: "addr",
            },
            Argument {
                ty: "int",
                name: "addr_len",
            },
        ],
        Sysno::recvfrom => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "void __user *",
                name: "ubuf",
            },
            Argument {
                ty: "size_t",
                name: "size",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
            Argument {
                ty: "struct sockaddr __user *",
                name: "addr",
            },
            Argument {
                ty: "int __user *",
                name: "addr_len",
            },
        ],
        Sysno::sendmsg => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "struct user_msghdr __user *",
                name: "msg",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::recvmsg => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "struct user_msghdr __user *",
                name: "msg",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::shutdown => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "int",
                name: "how",
            },
        ],
        Sysno::bind => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "struct sockaddr __user *",
                name: "umyaddr",
            },
            Argument {
                ty: "int",
                name: "addrlen",
            },
        ],
        Sysno::listen => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "int",
                name: "backlog",
            },
        ],
        Sysno::getsockname => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "struct sockaddr __user *",
                name: "usockaddr",
            },
            Argument {
                ty: "int __user *",
                name: "usockaddr_len",
            },
        ],
        Sysno::getpeername => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "struct sockaddr __user *",
                name: "usockaddr",
            },
            Argument {
                ty: "int __user *",
                name: "usockaddr_len",
            },
        ],
        Sysno::socketpair => &[
            Argument {
                ty: "int",
                name: "family",
            },
            Argument {
                ty: "int",
                name: "type",
            },
            Argument {
                ty: "int",
                name: "protocol",
            },
            Argument {
                ty: "int __user *",
                name: "usockvec",
            },
        ],
        Sysno::setsockopt => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "int",
                name: "level",
            },
            Argument {
                ty: "int",
                name: "optname",
            },
            Argument {
                ty: "char __user *",
                name: "optval",
            },
            Argument {
                ty: "int",
                name: "optlen",
            },
        ],
        Sysno::getsockopt => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "int",
                name: "level",
            },
            Argument {
                ty: "int",
                name: "optname",
            },
            Argument {
                ty: "char __user *",
                name: "optval",
            },
            Argument {
                ty: "int __user *",
                name: "optlen",
            },
        ],
        Sysno::clone => &[
            Argument {
                ty: "unsigned long",
                name: "clone_flags",
            },
            Argument {
                ty: "unsigned long",
                name: "newsp",
            },
            Argument {
                ty: "int __user *",
                name: "parent_tidptr",
            },
            Argument {
                ty: "int __user *",
                name: "child_tidptr",
            },
            Argument {
                ty: "unsigned long",
                name: "tls",
            },
        ],
        Sysno::fork => &[
        ],
        Sysno::execve => &[
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "const char __user *const __user *",
                name: "argv",
            },
            Argument {
                ty: "const char __user *const __user *",
                name: "envp",
            },
        ],
        Sysno::exit => &[
            Argument {
                ty: "int",
                name: "error_code",
            },
        ],
        Sysno::wait4 => &[
            Argument {
                ty: "pid_t",
                name: "upid",
            },
            Argument {
                ty: "int __user *",
                name: "stat_addr",
            },
            Argument {
                ty: "int",
                name: "options",
            },
            Argument {
                ty: "struct rusage __user *",
                name: "ru",
            },
        ],
        Sysno::kill => &[
            Argument {
                ty: "pid_t",
                name: "pid",
            },
            Argument {
                ty: "int",
                name: "sig",
            },
        ],
        Sysno::uname => &[
            Argument {
                ty: "struct old_utsname __user *",
                name: "name",
            },
        ],
        Sysno::semget => &[
            Argument {
                ty: "key_t",
                name: "key",
            },
            Argument {
                ty: "int",
                name: "nsems",
            },
            Argument {
                ty: "int",
                name: "semflg",
            },
        ],
        Sysno::semop => &[
            Argument {
                ty: "int",
                name: "semid",
            },
            Argument {
                ty: "struct sembuf __user *",
                name: "tsops",
            },
            Argument {
                ty: "unsigned",
                name: "nsops",
            },
        ],
        Sysno::semctl => &[
            Argument {
                ty: "int",
                name: "semid",
            },
            Argument {
                ty: "int",
                name: "semnum",
            },
            Argument {
                ty: "int",
                name: "cmd",
            },
            Argument {
                ty: "unsigned long",
                name: "arg",
            },
        ],
        Sysno::shmdt => &[
            Argument {
                ty: "char __user *",
                name: "shmaddr",
            },
        ],
        Sysno::msgget => &[
            Argument {
                ty: "key_t",
                name: "key",
            },
            Argument {
                ty: "int",
                name: "msgflg",
            },
        ],
        Sysno::msgsnd => &[
            Argument {
                ty: "int",
                name: "msqid",
            },
            Argument {
                ty: "struct msgbuf __user *",
                name: "msgp",
            },
            Argument {
                ty: "size_t",
                name: "msgsz",
            },
            Argument {
                ty: "int",
                name: "msgflg",
            },
        ],
        Sysno::msgrcv => &[
            Argument {
                ty: "int",
                name: "msqid",
            },
            Argument {
                ty: "struct msgbuf __user *",
                name: "msgp",
            },
            Argument {
                ty: "size_t",
                name: "msgsz",
            },
            Argument {
                ty: "long",
                name: "msgtyp",
            },
            Argument {
                ty: "int",
                name: "msgflg",
            },
        ],
        Sysno::msgctl => &[
            Argument {
                ty: "int",
                name: "msqid",
            },
            Argument {
                ty: "int",
                name: "cmd",
            },
            Argument {
                ty: "struct msqid_ds __user *",
                name: "buf",
            },
        ],
        Sysno::fcntl => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
            Argument {
                ty: "unsigned int",
                name: "cmd",
            },
            Argument {
                ty: "unsigned long",
                name: "arg",
            },
        ],
        Sysno::flock => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
            Argument {
                ty: "unsigned int",
                name: "cmd",
            },
        ],
        Sysno::fsync => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
        ],
        Sysno::fdatasync => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
        ],
        Sysno::truncate => &[
            Argument {
                ty: "const char __user *",
                name: "path",
            },
            Argument {
                ty: "long",
                name: "length",
            },
        ],
        Sysno::ftruncate => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
            Argument {
                ty: "unsigned long",
                name: "length",
            },
        ],
        Sysno::getdents => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
            Argument {
                ty: "struct linux_dirent __user *",
                name: "dirent",
            },
            Argument {
                ty: "unsigned int",
                name: "count",
            },
        ],
        Sysno::getcwd => &[
            Argument {
                ty: "char __user *",
                name: "buf",
            },
            Argument {
                ty: "unsigned long",
                name: "size",
            },
        ],
        Sysno::chdir => &[
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
        ],
        Sysno::fchdir => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
        ],
        Sysno::rename => &[
            Argument {
                ty: "const char __user *",
                name: "oldname",
            },
            Argument {
                ty: "const char __user *",
                name: "newname",
            },
        ],
        Sysno::mkdir => &[
            Argument {
                ty: "const char __user *",
                name: "pathname",
            },
            Argument {
                ty: "umode_t",
                name: "mode",
            },
        ],
        Sysno::rmdir => &[
            Argument {
                ty: "const char __user *",
                name: "pathname",
            },
        ],
        Sysno::creat => &[
            Argument {
                ty: "const char __user *",
                name: "pathname",
            },
            Argument {
                ty: "umode_t",
                name: "mode",
            },
        ],
        Sysno::link => &[
            Argument {
                ty: "const char __user *",
                name: "oldname",
            },
            Argument {
                ty: "const char __user *",
                name: "newname",
            },
        ],
        Sysno::unlink => &[
            Argument {
                ty: "const char __user *",
                name: "pathname",
            },
        ],
        Sysno::symlink => &[
            Argument {
                ty: "const char __user *",
                name: "oldname",
            },
            Argument {
                ty: "const char __user *",
                name: "newname",
            },
        ],
        Sysno::readlink => &[
            Argument {
                ty: "const char __user *",
                name: "path",
            },
            Argument {
                ty: "char __user *",
                name: "buf",
            },
            Argument {
                ty: "int",
                name: "bufsiz",
            },
        ],
        Sysno::chmod => &[
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "umode_t",
                name: "mode",
            },
        ],
        Sysno::fchmod => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
            Argument {
                ty: "umode_t",
                name: "mode",
            },
        ],
        Sysno::chown => &[
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "uid_t",
                name: "user",
            },
            Argument {
                ty: "gid_t",
                name: "group",
            },
        ],
        Sysno::fchown => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
            Argument {
                ty: "uid_t",
                name: "user",
            },
            Argument {
                ty: "gid_t",
                name: "group",
            },
        ],
        Sysno::lchown => &[
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "uid_t",
                name: "user",
            },
            Argument {
                ty: "gid_t",
                name: "group",
            },
        ],
        Sysno::umask => &[
            Argument {
                ty: "int",
                name: "mask",
            },
        ],
        Sysno::gettimeofday => &[
            Argument {
                ty: "struct __kernel_old_timeval __user *",
                name: "tv",
            },
            Argument {
                ty: "struct timezone __user *",
                name: "tz",
            },
        ],
        Sysno::getrlimit => &[
            Argument {
                ty: "unsigned int",
                name: "resource",
            },
            Argument {
                ty: "struct rlimit __user *",
                name: "rlim",
            },
        ],
        Sysno::getrusage => &[
            Argument {
                ty: "int",
                name: "who",
            },
            Argument {
                ty: "struct rusage __user *",
                name: "ru",
            },
        ],
        Sysno::sysinfo => &[
            Argument {
                ty: "struct sysinfo __user *",
                name: "info",
            },
        ],
        Sysno::times => &[
            Argument {
                ty: "struct tms __user *",
                name: "tbuf",
            },
        ],
        Sysno::ptrace => &[
            Argument {
                ty: "long",
                name: "request",
            },
            Argument {
                ty: "long",
                name: "pid",
            },
            Argument {
                ty: "unsigned long",
                name: "addr",
            },
            Argument {
                ty: "unsigned long",
                name: "data",
            },
        ],
        Sysno::getuid => &[
        ],
        Sysno::syslog => &[
            Argument {
                ty: "int",
                name: "type",
            },
            Argument {
                ty: "char __user *",
                name: "buf",
            },
            Argument {
                ty: "int",
                name: "len",
            },
        ],
        Sysno::getgid => &[
        ],
        Sysno::setuid => &[
            Argument {
                ty: "uid_t",
                name: "uid",
            },
        ],
        Sysno::setgid => &[
            Argument {
                ty: "gid_t",
                name: "gid",
            },
        ],
        Sysno::geteuid => &[
        ],
        Sysno::getegid => &[
        ],
        Sysno::setpgid => &[
            Argument {
                ty: "pid_t",
                name: "pid",
            },
            Argument {
                ty: "pid_t",
                name: "pgid",
            },
        ],
        Sysno::getppid => &[
        ],
        Sysno::getpgrp => &[
        ],
        Sysno::setsid => &[
        ],
        Sysno::setreuid => &[
            Argument {
                ty: "uid_t",
                name: "ruid",
            },
            Argument {
                ty: "uid_t",
                name: "euid",
            },
        ],
        Sysno::setregid => &[
            Argument {
                ty: "gid_t",
                name: "rgid",
            },
            Argument {
                ty: "gid_t",
                name: "egid",
            },
        ],
        Sysno::getgroups => &[
            Argument {
                ty: "int",
                name: "gidsetsize",
            },
            Argument {
                ty: "gid_t __user *",
                name: "grouplist",
            },
        ],
        Sysno::setgroups => &[
            Argument {
                ty: "int",
                name: "gidsetsize",
            },
            Argument {
                ty: "gid_t __user *",
                name: "grouplist",
            },
        ],
        Sysno::setresuid => &[
            Argument {
                ty: "uid_t",
                name: "ruid",
            },
            Argument {
                ty: "uid_t",
                name: "euid",
            },
            Argument {
                ty: "uid_t",
                name: "suid",
            },
        ],
        Sysno::getresuid => &[
            Argument {
                ty: "uid_t __user *",
                name: "ruidp",
            },
            Argument {
                ty: "uid_t __user *",
                name: "euidp",
            },
            Argument {
                ty: "uid_t __user *",
                name: "suidp",
            },
        ],
        Sysno::setresgid => &[
            Argument {
                ty: "gid_t",
                name: "rgid",
            },
            Argument {
                ty: "gid_t",
                name: "egid",
            },
            Argument {
                ty: "gid_t",
                name: "sgid",
            },
        ],
        Sysno::getresgid => &[
            Argument {
                ty: "gid_t __user *",
                name: "rgidp",
            },
            Argument {
                ty: "gid_t __user *",
                name: "egidp",
            },
            Argument {
                ty: "gid_t __user *",
                name: "sgidp",
            },
        ],
        Sysno::getpgid => &[
            Argument {
                ty: "pid_t",
                name: "pid",
            },
        ],
        Sysno::setfsuid => &[
            Argument {
                ty: "uid_t",
                name: "uid",
            },
        ],
        Sysno::setfsgid => &[
            Argument {
                ty: "gid_t",
                name: "gid",
            },
        ],
        Sysno::getsid => &[
            Argument {
                ty: "pid_t",
                name: "pid",
            },
        ],
        Sysno::capget => &[
            Argument {
                ty: "cap_user_header_t",
                name: "header",
            },
            Argument {
                ty: "cap_user_data_t",
                name: "dataptr",
            },
        ],
        Sysno::capset => &[
            Argument {
                ty: "cap_user_header_t",
                name: "header",
            },
            Argument {
                ty: "const cap_user_data_t",
                name: "data",
            },
        ],
        Sysno::rt_sigpending => &[
            Argument {
                ty: "sigset_t __user *",
                name: "uset",
            },
            Argument {
                ty: "size_t",
                name: "sigsetsize",
            },
        ],
        Sysno::rt_sigtimedwait => &[
            Argument {
                ty: "const sigset_t __user *",
                name: "uthese",
            },
            Argument {
                ty: "siginfo_t __user *",
                name: "uinfo",
            },
            Argument {
                ty: "const struct __kernel_timespec __user *",
                name: "uts",
            },
            Argument {
                ty: "size_t",
                name: "sigsetsize",
            },
        ],
        Sysno::rt_sigqueueinfo => &[
            Argument {
                ty: "pid_t",
                name: "pid",
            },
            Argument {
                ty: "int",
                name: "sig",
            },
            Argument {
                ty: "siginfo_t __user *",
                name: "uinfo",
            },
        ],
        Sysno::rt_sigsuspend => &[
            Argument {
                ty: "sigset_t __user *",
                name: "unewset",
            },
            Argument {
                ty: "size_t",
                name: "sigsetsize",
            },
        ],
        Sysno::sigaltstack => &[
            Argument {
                ty: "const stack_t __user *",
                name: "uss",
            },
            Argument {
                ty: "stack_t __user *",
                name: "uoss",
            },
        ],
        Sysno::utime => &[
            Argument {
                ty: "char __user *",
                name: "filename",
            },
            Argument {
                ty: "struct utimbuf __user *",
                name: "times",
            },
        ],
        Sysno::mknod => &[
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "umode_t",
                name: "mode",
            },
            Argument {
                ty: "unsigned",
                name: "dev",
            },
        ],
        Sysno::personality => &[
            Argument {
                ty: "unsigned int",
                name: "personality",
            },
        ],
        Sysno::ustat => &[
            Argument {
                ty: "unsigned",
                name: "dev",
            },
            Argument {
                ty: "struct ustat __user *",
                name: "ubuf",
            },
        ],
        Sysno::statfs => &[
            Argument {
                ty: "const char __user *",
                name: "pathname",
            },
            Argument {
                ty: "struct statfs __user *",
                name: "buf",
            },
        ],
        Sysno::fstatfs => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
            Argument {
                ty: "struct statfs __user *",
                name: "buf",
            },
        ],
        Sysno::sysfs => &[
            Argument {
                ty: "int",
                name: "option",
            },
            Argument {
                ty: "unsigned long",
                name: "arg1",
            },
            Argument {
                ty: "unsigned long",
                name: "arg2",
            },
        ],
        Sysno::getpriority => &[
            Argument {
                ty: "int",
                name: "which",
            },
            Argument {
                ty: "int",
                name: "who",
            },
        ],
        Sysno::setpriority => &[
            Argument {
                ty: "int",
                name: "which",
            },
            Argument {
                ty: "int",
                name: "who",
            },
            Argument {
                ty: "int",
                name: "niceval",
            },
        ],
        Sysno::sched_setparam => &[
            Argument {
                ty: "pid_t",
                name: "pid",
            },
            Argument {
                ty: "struct sched_param __user *",
                name: "param",
            },
        ],
        Sysno::sched_getparam => &[
            Argument {
                ty: "pid_t",
                name: "pid",
            },
            Argument {
                ty: "struct sched_param __user *",
                name: "param",
            },
        ],
        Sysno::sched_setscheduler => &[
            Argument {
                ty: "pid_t",
                name: "pid",
            },
            Argument {
                ty: "int",
                name: "policy",
            },
            Argument {
                ty: "struct sched_param __user *",
                name: "param",
            },
        ],
        Sysno::sched_getscheduler => &[
            Argument {
                ty: "pid_t",
                name: "pid",
            },
        ],
        Sysno::sched_get_priority_max => &[
            Argument {
                ty: "int",
                name: "policy",
            },
        ],
        Sysno::sched_get_priority_min => &[
            Argument {
                ty: "int",
                name: "policy",
            },
        ],
        Sysno::sched_rr_get_interval => &[
            Argument {
                ty: "pid_t",
                name: "pid",
            },
            Argument {
                ty: "struct __kernel_timespec __user *",
                name: "interval",
            },
        ],
        Sysno::mlock => &[
            Argument {
                ty: "unsigned long",
                name: "start",
            },
            Argument {
                ty: "size_t",
                name: "len",
            },
        ],
        Sysno::munlock => &[
            Argument {
                ty: "unsigned long",
                name: "start",
            },
            Argument {
                ty: "size_t",
                name: "len",
            },
        ],
        Sysno::mlockall => &[
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::munlockall => &[
        ],
        Sysno::vhangup => &[
        ],
        Sysno::pivot_root => &[
            Argument {
                ty: "const char __user *",
                name: "new_root",
            },
            Argument {
                ty: "const char __user *",
                name: "put_old",
            },
        ],
        Sysno::prctl => &[
            Argument {
                ty: "int",
                name: "option",
            },
            Argument {
                ty: "unsigned long",
                name: "arg2",
            },
            Argument {
                ty: "unsigned long",
                name: "arg3",
            },
            Argument {
                ty: "unsigned long",
                name: "arg4",
            },
            Argument {
                ty: "unsigned long",
                name: "arg5",
            },
        ],
        Sysno::adjtimex => &[
            Argument {
                ty: "struct __kernel_timex __user *",
                name: "txc_p",
            },
        ],
        Sysno::setrlimit => &[
            Argument {
                ty: "unsigned int",
                name: "resource",
            },
            Argument {
                ty: "struct rlimit __user *",
                name: "rlim",
            },
        ],
        Sysno::chroot => &[
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
        ],
        Sysno::sync => &[
        ],
        Sysno::acct => &[
            Argument {
                ty: "const char __user *",
                name: "name",
            },
        ],
        Sysno::settimeofday => &[
            Argument {
                ty: "struct __kernel_old_timeval __user *",
                name: "tv",
            },
            Argument {
                ty: "struct timezone __user *",
                name: "tz",
            },
        ],
        Sysno::mount => &[
            Argument {
                ty: "char __user *",
                name: "dev_name",
            },
            Argument {
                ty: "char __user *",
                name: "dir_name",
            },
            Argument {
                ty: "char __user *",
                name: "type",
            },
            Argument {
                ty: "unsigned long",
                name: "flags",
            },
            Argument {
                ty: "void __user *",
                name: "data",
            },
        ],
        Sysno::swapon => &[
            Argument {
                ty: "const char __user *",
                name: "specialfile",
            },
            Argument {
                ty: "int",
                name: "swap_flags",
            },
        ],
        Sysno::swapoff => &[
            Argument {
                ty: "const char __user *",
                name: "specialfile",
            },
        ],
        Sysno::reboot => &[
            Argument {
                ty: "int",
                name: "magic1",
            },
            Argument {
                ty: "int",
                name: "magic2",
            },
            Argument {
                ty: "unsigned int",
                name: "cmd",
            },
            Argument {
                ty: "void __user *",
                name: "arg",
            },
        ],
        Sysno::sethostname => &[
            Argument {
                ty: "char __user *",
                name: "name",
            },
            Argument {
                ty: "int",
                name: "len",
            },
        ],
        Sysno::setdomainname => &[
            Argument {
                ty: "char __user *",
                name: "name",
            },
            Argument {
                ty: "int",
                name: "len",
            },
        ],
        Sysno::init_module => &[
            Argument {
                ty: "void __user *",
                name: "umod",
            },
            Argument {
                ty: "unsigned long",
                name: "len",
            },
            Argument {
                ty: "const char __user *",
                name: "uargs",
            },
        ],
        Sysno::delete_module => &[
            Argument {
                ty: "const char __user *",
                name: "name_user",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::quotactl => &[
            Argument {
                ty: "unsigned int",
                name: "cmd",
            },
            Argument {
                ty: "const char __user *",
                name: "special",
            },
            Argument {
                ty: "qid_t",
                name: "id",
            },
            Argument {
                ty: "void __user *",
                name: "addr",
            },
        ],
        Sysno::gettid => &[
        ],
        Sysno::readahead => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "loff_t",
                name: "offset",
            },
            Argument {
                ty: "size_t",
                name: "count",
            },
        ],
        Sysno::setxattr => &[
            Argument {
                ty: "const char __user *",
                name: "pathname",
            },
            Argument {
                ty: "const char __user *",
                name: "name",
            },
            Argument {
                ty: "const void __user *",
                name: "value",
            },
            Argument {
                ty: "size_t",
                name: "size",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::lsetxattr => &[
            Argument {
                ty: "const char __user *",
                name: "pathname",
            },
            Argument {
                ty: "const char __user *",
                name: "name",
            },
            Argument {
                ty: "const void __user *",
                name: "value",
            },
            Argument {
                ty: "size_t",
                name: "size",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::fsetxattr => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "const char __user *",
                name: "name",
            },
            Argument {
                ty: "const void __user *",
                name: "value",
            },
            Argument {
                ty: "size_t",
                name: "size",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::getxattr => &[
            Argument {
                ty: "const char __user *",
                name: "pathname",
            },
            Argument {
                ty: "const char __user *",
                name: "name",
            },
            Argument {
                ty: "void __user *",
                name: "value",
            },
            Argument {
                ty: "size_t",
                name: "size",
            },
        ],
        Sysno::lgetxattr => &[
            Argument {
                ty: "const char __user *",
                name: "pathname",
            },
            Argument {
                ty: "const char __user *",
                name: "name",
            },
            Argument {
                ty: "void __user *",
                name: "value",
            },
            Argument {
                ty: "size_t",
                name: "size",
            },
        ],
        Sysno::fgetxattr => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "const char __user *",
                name: "name",
            },
            Argument {
                ty: "void __user *",
                name: "value",
            },
            Argument {
                ty: "size_t",
                name: "size",
            },
        ],
        Sysno::listxattr => &[
            Argument {
                ty: "const char __user *",
                name: "pathname",
            },
            Argument {
                ty: "char __user *",
                name: "list",
            },
            Argument {
                ty: "size_t",
                name: "size",
            },
        ],
        Sysno::llistxattr => &[
            Argument {
                ty: "const char __user *",
                name: "pathname",
            },
            Argument {
                ty: "char __user *",
                name: "list",
            },
            Argument {
                ty: "size_t",
                name: "size",
            },
        ],
        Sysno::flistxattr => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "char __user *",
                name: "list",
            },
            Argument {
                ty: "size_t",
                name: "size",
            },
        ],
        Sysno::removexattr => &[
            Argument {
                ty: "const char __user *",
                name: "pathname",
            },
            Argument {
                ty: "const char __user *",
                name: "name",
            },
        ],
        Sysno::lremovexattr => &[
            Argument {
                ty: "const char __user *",
                name: "pathname",
            },
            Argument {
                ty: "const char __user *",
                name: "name",
            },
        ],
        Sysno::fremovexattr => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "const char __user *",
                name: "name",
            },
        ],
        Sysno::tkill => &[
            Argument {
                ty: "pid_t",
                name: "pid",
            },
            Argument {
                ty: "int",
                name: "sig",
            },
        ],
        Sysno::futex => &[
            Argument {
                ty: "u32 __user *",
                name: "uaddr",
            },
            Argument {
                ty: "int",
                name: "op",
            },
            Argument {
                ty: "u32",
                name: "val",
            },
            Argument {
                ty: "const struct __kernel_timespec __user *",
                name: "utime",
            },
            Argument {
                ty: "u32 __user *",
                name: "uaddr2",
            },
            Argument {
                ty: "u32",
                name: "val3",
            },
        ],
        Sysno::sched_setaffinity => &[
            Argument {
                ty: "pid_t",
                name: "pid",
            },
            Argument {
                ty: "unsigned int",
                name: "len",
            },
            Argument {
                ty: "unsigned long __user *",
                name: "user_mask_ptr",
            },
        ],
        Sysno::sched_getaffinity => &[
            Argument {
                ty: "pid_t",
                name: "pid",
            },
            Argument {
                ty: "unsigned int",
                name: "len",
            },
            Argument {
                ty: "unsigned long __user *",
                name: "user_mask_ptr",
            },
        ],
        Sysno::cacheflush => &[
            Argument {
                ty: "unsigned int",
                name: "start",
            },
            Argument {
                ty: "unsigned int",
                name: "end",
            },
            Argument {
                ty: "int",
                name: "cache",
            },
        ],
        Sysno::cachectl => &[
            Argument {
                ty: "char *",
                name: "addr",
            },
            Argument {
                ty: "int",
                name: "nbytes",
            },
            Argument {
                ty: "int",
                name: "op",
            },
        ],
        Sysno::sysmips => &[
            Argument {
                ty: "long",
                name: "cmd",
            },
            Argument {
                ty: "long",
                name: "arg1",
            },
            Argument {
                ty: "long",
                name: "arg2",
            },
        ],
        Sysno::io_setup => &[
            Argument {
                ty: "unsigned",
                name: "nr_events",
            },
            Argument {
                ty: "aio_context_t __user *",
                name: "ctxp",
            },
        ],
        Sysno::io_destroy => &[
            Argument {
                ty: "aio_context_t",
                name: "ctx",
            },
        ],
        Sysno::io_getevents => &[
            Argument {
                ty: "aio_context_t",
                name: "ctx_id",
            },
            Argument {
                ty: "long",
                name: "min_nr",
            },
            Argument {
                ty: "long",
                name: "nr",
            },
            Argument {
                ty: "struct io_event __user *",
                name: "events",
            },
            Argument {
                ty: "struct __kernel_timespec __user *",
                name: "timeout",
            },
        ],
        Sysno::io_submit => &[
            Argument {
                ty: "aio_context_t",
                name: "ctx_id",
            },
            Argument {
                ty: "long",
                name: "nr",
            },
            Argument {
                ty: "struct iocb __user * __user *",
                name: "iocbpp",
            },
        ],
        Sysno::io_cancel => &[
            Argument {
                ty: "aio_context_t",
                name: "ctx_id",
            },
            Argument {
                ty: "struct iocb __user *",
                name: "iocb",
            },
            Argument {
                ty: "struct io_event __user *",
                name: "result",
            },
        ],
        Sysno::exit_group => &[
            Argument {
                ty: "int",
                name: "error_code",
            },
        ],
        Sysno::epoll_create => &[
            Argument {
                ty: "int",
                name: "size",
            },
        ],
        Sysno::epoll_ctl => &[
            Argument {
                ty: "int",
                name: "epfd",
            },
            Argument {
                ty: "int",
                name: "op",
            },
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "struct epoll_event __user *",
                name: "event",
            },
        ],
        Sysno::epoll_wait => &[
            Argument {
                ty: "int",
                name: "epfd",
            },
            Argument {
                ty: "struct epoll_event __user *",
                name: "events",
            },
            Argument {
                ty: "int",
                name: "maxevents",
            },
            Argument {
                ty: "int",
                name: "timeout",
            },
        ],
        Sysno::remap_file_pages => &[
            Argument {
                ty: "unsigned long",
                name: "start",
            },
            Argument {
                ty: "unsigned long",
                name: "size",
            },
            Argument {
                ty: "unsigned long",
                name: "prot",
            },
            Argument {
                ty: "unsigned long",
                name: "pgoff",
            },
            Argument {
                ty: "unsigned long",
                name: "flags",
            },
        ],
        Sysno::rt_sigreturn => &[
        ],
        Sysno::set_tid_address => &[
            Argument {
                ty: "int __user *",
                name: "tidptr",
            },
        ],
        Sysno::restart_syscall => &[
        ],
        Sysno::semtimedop => &[
            Argument {
                ty: "int",
                name: "semid",
            },
            Argument {
                ty: "struct sembuf __user *",
                name: "tsops",
            },
            Argument {
                ty: "unsigned int",
                name: "nsops",
            },
            Argument {
                ty: "const struct __kernel_timespec __user *",
                name: "timeout",
            },
        ],
        Sysno::fadvise64 => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "loff_t",
                name: "offset",
            },
            Argument {
                ty: "size_t",
                name: "len",
            },
            Argument {
                ty: "int",
                name: "advice",
            },
        ],
        Sysno::timer_create => &[
            Argument {
                ty: "const clockid_t",
                name: "which_clock",
            },
            Argument {
                ty: "struct sigevent __user *",
                name: "timer_event_spec",
            },
            Argument {
                ty: "timer_t __user *",
                name: "created_timer_id",
            },
        ],
        Sysno::timer_settime => &[
            Argument {
                ty: "timer_t",
                name: "timer_id",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
            Argument {
                ty: "const struct __kernel_itimerspec __user *",
                name: "new_setting",
            },
            Argument {
                ty: "struct __kernel_itimerspec __user *",
                name: "old_setting",
            },
        ],
        Sysno::timer_gettime => &[
            Argument {
                ty: "timer_t",
                name: "timer_id",
            },
            Argument {
                ty: "struct __kernel_itimerspec __user *",
                name: "setting",
            },
        ],
        Sysno::timer_getoverrun => &[
            Argument {
                ty: "timer_t",
                name: "timer_id",
            },
        ],
        Sysno::timer_delete => &[
            Argument {
                ty: "timer_t",
                name: "timer_id",
            },
        ],
        Sysno::clock_settime => &[
            Argument {
                ty: "const clockid_t",
                name: "which_clock",
            },
            Argument {
                ty: "const struct __kernel_timespec __user *",
                name: "tp",
            },
        ],
        Sysno::clock_gettime => &[
            Argument {
                ty: "const clockid_t",
                name: "which_clock",
            },
            Argument {
                ty: "struct __kernel_timespec __user *",
                name: "tp",
            },
        ],
        Sysno::clock_getres => &[
            Argument {
                ty: "const clockid_t",
                name: "which_clock",
            },
            Argument {
                ty: "struct __kernel_timespec __user *",
                name: "tp",
            },
        ],
        Sysno::clock_nanosleep => &[
            Argument {
                ty: "const clockid_t",
                name: "which_clock",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
            Argument {
                ty: "const struct __kernel_timespec __user *",
                name: "rqtp",
            },
            Argument {
                ty: "struct __kernel_timespec __user *",
                name: "rmtp",
            },
        ],
        Sysno::tgkill => &[
            Argument {
                ty: "pid_t",
                name: "tgid",
            },
            Argument {
                ty: "pid_t",
                name: "pid",
            },
            Argument {
                ty: "int",
                name: "sig",
            },
        ],
        Sysno::utimes => &[
            Argument {
                ty: "char __user *",
                name: "filename",
            },
            Argument {
                ty: "struct __kernel_old_timeval __user *",
                name: "utimes",
            },
        ],
        Sysno::mbind => &[
            Argument {
                ty: "unsigned long",
                name: "start",
            },
            Argument {
                ty: "unsigned long",
                name: "len",
            },
            Argument {
                ty: "unsigned long",
                name: "mode",
            },
            Argument {
                ty: "const unsigned long __user *",
                name: "nmask",
            },
            Argument {
                ty: "unsigned long",
                name: "maxnode",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::get_mempolicy => &[
            Argument {
                ty: "int __user *",
                name: "policy",
            },
            Argument {
                ty: "unsigned long __user *",
                name: "nmask",
            },
            Argument {
                ty: "unsigned long",
                name: "maxnode",
            },
            Argument {
                ty: "unsigned long",
                name: "addr",
            },
            Argument {
                ty: "unsigned long",
                name: "flags",
            },
        ],
        Sysno::set_mempolicy => &[
            Argument {
                ty: "int",
                name: "mode",
            },
            Argument {
                ty: "const unsigned long __user *",
                name: "nmask",
            },
            Argument {
                ty: "unsigned long",
                name: "maxnode",
            },
        ],
        Sysno::mq_open => &[
            Argument {
                ty: "const char __user *",
                name: "u_name",
            },
            Argument {
                ty: "int",
                name: "oflag",
            },
            Argument {
                ty: "umode_t",
                name: "mode",
            },
            Argument {
                ty: "struct mq_attr __user *",
                name: "u_attr",
            },
        ],
        Sysno::mq_unlink => &[
            Argument {
                ty: "const char __user *",
                name: "u_name",
            },
        ],
        Sysno::mq_timedsend => &[
            Argument {
                ty: "mqd_t",
                name: "mqdes",
            },
            Argument {
                ty: "const char __user *",
                name: "u_msg_ptr",
            },
            Argument {
                ty: "size_t",
                name: "msg_len",
            },
            Argument {
                ty: "unsigned int",
                name: "msg_prio",
            },
            Argument {
                ty: "const struct __kernel_timespec __user *",
                name: "u_abs_timeout",
            },
        ],
        Sysno::mq_timedreceive => &[
            Argument {
                ty: "mqd_t",
                name: "mqdes",
            },
            Argument {
                ty: "char __user *",
                name: "u_msg_ptr",
            },
            Argument {
                ty: "size_t",
                name: "msg_len",
            },
            Argument {
                ty: "unsigned int __user *",
                name: "u_msg_prio",
            },
            Argument {
                ty: "const struct __kernel_timespec __user *",
                name: "u_abs_timeout",
            },
        ],
        Sysno::mq_notify => &[
            Argument {
                ty: "mqd_t",
                name: "mqdes",
            },
            Argument {
                ty: "const struct sigevent __user *",
                name: "u_notification",
            },
        ],
        Sysno::mq_getsetattr => &[
            Argument {
                ty: "mqd_t",
                name: "mqdes",
            },
            Argument {
                ty: "const struct mq_attr __user *",
                name: "u_mqstat",
            },
            Argument {
                ty: "struct mq_attr __user *",
                name: "u_omqstat",
            },
        ],
        Sysno::waitid => &[
            Argument {
                ty: "int",
                name: "which",
            },
            Argument {
                ty: "pid_t",
                name: "upid",
            },
            Argument {
                ty: "struct siginfo __user *",
                name: "infop",
            },
            Argument {
                ty: "int",
                name: "options",
            },
            Argument {
                ty: "struct rusage __user *",
                name: "ru",
            },
        ],
        Sysno::add_key => &[
            Argument {
                ty: "const char __user *",
                name: "_type",
            },
            Argument {
                ty: "const char __user *",
                name: "_description",
            },
            Argument {
                ty: "const void __user *",
                name: "_payload",
            },
            Argument {
                ty: "size_t",
                name: "plen",
            },
            Argument {
                ty: "key_serial_t",
                name: "ringid",
            },
        ],
        Sysno::request_key => &[
            Argument {
                ty: "const char __user *",
                name: "_type",
            },
            Argument {
                ty: "const char __user *",
                name: "_description",
            },
            Argument {
                ty: "const char __user *",
                name: "_callout_info",
            },
            Argument {
                ty: "key_serial_t",
                name: "destringid",
            },
        ],
        Sysno::keyctl => &[
            Argument {
                ty: "int",
                name: "option",
            },
            Argument {
                ty: "unsigned long",
                name: "arg2",
            },
            Argument {
                ty: "unsigned long",
                name: "arg3",
            },
            Argument {
                ty: "unsigned long",
                name: "arg4",
            },
            Argument {
                ty: "unsigned long",
                name: "arg5",
            },
        ],
        Sysno::set_thread_area => &[
            Argument {
                ty: "struct user_desc __user *",
                name: "user_desc",
            },
        ],
        Sysno::inotify_init => &[
        ],
        Sysno::inotify_add_watch => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "const char __user *",
                name: "pathname",
            },
            Argument {
                ty: "u32",
                name: "mask",
            },
        ],
        Sysno::inotify_rm_watch => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "__s32",
                name: "wd",
            },
        ],
        Sysno::migrate_pages => &[
            Argument {
                ty: "pid_t",
                name: "pid",
            },
            Argument {
                ty: "unsigned long",
                name: "maxnode",
            },
            Argument {
                ty: "const unsigned long __user *",
                name: "old_nodes",
            },
            Argument {
                ty: "const unsigned long __user *",
                name: "new_nodes",
            },
        ],
        Sysno::openat => &[
            Argument {
                ty: "int",
                name: "dfd",
            },
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
            Argument {
                ty: "umode_t",
                name: "mode",
            },
        ],
        Sysno::mkdirat => &[
            Argument {
                ty: "int",
                name: "dfd",
            },
            Argument {
                ty: "const char __user *",
                name: "pathname",
            },
            Argument {
                ty: "umode_t",
                name: "mode",
            },
        ],
        Sysno::mknodat => &[
            Argument {
                ty: "int",
                name: "dfd",
            },
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "umode_t",
                name: "mode",
            },
            Argument {
                ty: "unsigned int",
                name: "dev",
            },
        ],
        Sysno::fchownat => &[
            Argument {
                ty: "int",
                name: "dfd",
            },
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "uid_t",
                name: "user",
            },
            Argument {
                ty: "gid_t",
                name: "group",
            },
            Argument {
                ty: "int",
                name: "flag",
            },
        ],
        Sysno::futimesat => &[
            Argument {
                ty: "int",
                name: "dfd",
            },
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "struct __kernel_old_timeval __user *",
                name: "utimes",
            },
        ],
        Sysno::newfstatat => &[
            Argument {
                ty: "int",
                name: "dfd",
            },
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "struct stat __user *",
                name: "statbuf",
            },
            Argument {
                ty: "int",
                name: "flag",
            },
        ],
        Sysno::unlinkat => &[
            Argument {
                ty: "int",
                name: "dfd",
            },
            Argument {
                ty: "const char __user *",
                name: "pathname",
            },
            Argument {
                ty: "int",
                name: "flag",
            },
        ],
        Sysno::renameat => &[
            Argument {
                ty: "int",
                name: "olddfd",
            },
            Argument {
                ty: "const char __user *",
                name: "oldname",
            },
            Argument {
                ty: "int",
                name: "newdfd",
            },
            Argument {
                ty: "const char __user *",
                name: "newname",
            },
        ],
        Sysno::linkat => &[
            Argument {
                ty: "int",
                name: "olddfd",
            },
            Argument {
                ty: "const char __user *",
                name: "oldname",
            },
            Argument {
                ty: "int",
                name: "newdfd",
            },
            Argument {
                ty: "const char __user *",
                name: "newname",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::symlinkat => &[
            Argument {
                ty: "const char __user *",
                name: "oldname",
            },
            Argument {
                ty: "int",
                name: "newdfd",
            },
            Argument {
                ty: "const char __user *",
                name: "newname",
            },
        ],
        Sysno::readlinkat => &[
            Argument {
                ty: "int",
                name: "dfd",
            },
            Argument {
                ty: "const char __user *",
                name: "pathname",
            },
            Argument {
                ty: "char __user *",
                name: "buf",
            },
            Argument {
                ty: "int",
                name: "bufsiz",
            },
        ],
        Sysno::fchmodat => &[
            Argument {
                ty: "int",
                name: "dfd",
            },
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "umode_t",
                name: "mode",
            },
        ],
        Sysno::faccessat => &[
            Argument {
                ty: "int",
                name: "dfd",
            },
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "int",
                name: "mode",
            },
        ],
        Sysno::pselect6 => &[
            Argument {
                ty: "int",
                name: "n",
            },
            Argument {
                ty: "fd_set __user *",
                name: "inp",
            },
            Argument {
                ty: "fd_set __user *",
                name: "outp",
            },
            Argument {
                ty: "fd_set __user *",
                name: "exp",
            },
            Argument {
                ty: "struct __kernel_timespec __user *",
                name: "tsp",
            },
            Argument {
                ty: "void __user *",
                name: "sig",
            },
        ],
        Sysno::ppoll => &[
            Argument {
                ty: "struct pollfd __user *",
                name: "ufds",
            },
            Argument {
                ty: "unsigned int",
                name: "nfds",
            },
            Argument {
                ty: "struct __kernel_timespec __user *",
                name: "tsp",
            },
            Argument {
                ty: "const sigset_t __user *",
                name: "sigmask",
            },
            Argument {
                ty: "size_t",
                name: "sigsetsize",
            },
        ],
        Sysno::unshare => &[
            Argument {
                ty: "unsigned long",
                name: "unshare_flags",
            },
        ],
        Sysno::splice => &[
            Argument {
                ty: "int",
                name: "fd_in",
            },
            Argument {
                ty: "loff_t __user *",
                name: "off_in",
            },
            Argument {
                ty: "int",
                name: "fd_out",
            },
            Argument {
                ty: "loff_t __user *",
                name: "off_out",
            },
            Argument {
                ty: "size_t",
                name: "len",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::sync_file_range => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "loff_t",
                name: "offset",
            },
            Argument {
                ty: "loff_t",
                name: "nbytes",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::tee => &[
            Argument {
                ty: "int",
                name: "fdin",
            },
            Argument {
                ty: "int",
                name: "fdout",
            },
            Argument {
                ty: "size_t",
                name: "len",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::vmsplice => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "const struct iovec __user *",
                name: "uiov",
            },
            Argument {
                ty: "unsigned long",
                name: "nr_segs",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::move_pages => &[
            Argument {
                ty: "pid_t",
                name: "pid",
            },
            Argument {
                ty: "unsigned long",
                name: "nr_pages",
            },
            Argument {
                ty: "const void __user * __user *",
                name: "pages",
            },
            Argument {
                ty: "const int __user *",
                name: "nodes",
            },
            Argument {
                ty: "int __user *",
                name: "status",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::set_robust_list => &[
            Argument {
                ty: "struct robust_list_head __user *",
                name: "head",
            },
            Argument {
                ty: "size_t",
                name: "len",
            },
        ],
        Sysno::get_robust_list => &[
            Argument {
                ty: "int",
                name: "pid",
            },
            Argument {
                ty: "struct robust_list_head __user * __user *",
                name: "head_ptr",
            },
            Argument {
                ty: "size_t __user *",
                name: "len_ptr",
            },
        ],
        Sysno::kexec_load => &[
            Argument {
                ty: "unsigned long",
                name: "entry",
            },
            Argument {
                ty: "unsigned long",
                name: "nr_segments",
            },
            Argument {
                ty: "struct kexec_segment __user *",
                name: "segments",
            },
            Argument {
                ty: "unsigned long",
                name: "flags",
            },
        ],
        Sysno::getcpu => &[
            Argument {
                ty: "unsigned __user *",
                name: "cpup",
            },
            Argument {
                ty: "unsigned __user *",
                name: "nodep",
            },
            Argument {
                ty: "struct getcpu_cache __user *",
                name: "unused",
            },
        ],
        Sysno::epoll_pwait => &[
            Argument {
                ty: "int",
                name: "epfd",
            },
            Argument {
                ty: "struct epoll_event __user *",
                name: "events",
            },
            Argument {
                ty: "int",
                name: "maxevents",
            },
            Argument {
                ty: "int",
                name: "timeout",
            },
            Argument {
                ty: "const sigset_t __user *",
                name: "sigmask",
            },
            Argument {
                ty: "size_t",
                name: "sigsetsize",
            },
        ],
        Sysno::ioprio_set => &[
            Argument {
                ty: "int",
                name: "which",
            },
            Argument {
                ty: "int",
                name: "who",
            },
            Argument {
                ty: "int",
                name: "ioprio",
            },
        ],
        Sysno::ioprio_get => &[
            Argument {
                ty: "int",
                name: "which",
            },
            Argument {
                ty: "int",
                name: "who",
            },
        ],
        Sysno::utimensat => &[
            Argument {
                ty: "int",
                name: "dfd",
            },
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "struct __kernel_timespec __user *",
                name: "utimes",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::signalfd => &[
            Argument {
                ty: "int",
                name: "ufd",
            },
            Argument {
                ty: "sigset_t __user *",
                name: "user_mask",
            },
            Argument {
                ty: "size_t",
                name: "sizemask",
            },
        ],
        Sysno::eventfd => &[
            Argument {
                ty: "unsigned int",
                name: "count",
            },
        ],
        Sysno::fallocate => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "int",
                name: "mode",
            },
            Argument {
                ty: "loff_t",
                name: "offset",
            },
            Argument {
                ty: "loff_t",
                name: "len",
            },
        ],
        Sysno::timerfd_create => &[
            Argument {
                ty: "int",
                name: "clockid",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::timerfd_gettime => &[
            Argument {
                ty: "int",
                name: "ufd",
            },
            Argument {
                ty: "struct __kernel_itimerspec __user *",
                name: "otmr",
            },
        ],
        Sysno::timerfd_settime => &[
            Argument {
                ty: "int",
                name: "ufd",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
            Argument {
                ty: "const struct __kernel_itimerspec __user *",
                name: "utmr",
            },
            Argument {
                ty: "struct __kernel_itimerspec __user *",
                name: "otmr",
            },
        ],
        Sysno::signalfd4 => &[
            Argument {
                ty: "int",
                name: "ufd",
            },
            Argument {
                ty: "sigset_t __user *",
                name: "user_mask",
            },
            Argument {
                ty: "size_t",
                name: "sizemask",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::eventfd2 => &[
            Argument {
                ty: "unsigned int",
                name: "count",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::epoll_create1 => &[
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::dup3 => &[
            Argument {
                ty: "unsigned int",
                name: "oldfd",
            },
            Argument {
                ty: "unsigned int",
                name: "newfd",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::pipe2 => &[
            Argument {
                ty: "int __user *",
                name: "fildes",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::inotify_init1 => &[
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::preadv => &[
            Argument {
                ty: "unsigned long",
                name: "fd",
            },
            Argument {
                ty: "const struct iovec __user *",
                name: "vec",
            },
            Argument {
                ty: "unsigned long",
                name: "vlen",
            },
            Argument {
                ty: "unsigned long",
                name: "pos_l",
            },
            Argument {
                ty: "unsigned long",
                name: "pos_h",
            },
        ],
        Sysno::pwritev => &[
            Argument {
                ty: "unsigned long",
                name: "fd",
            },
            Argument {
                ty: "const struct iovec __user *",
                name: "vec",
            },
            Argument {
                ty: "unsigned long",
                name: "vlen",
            },
            Argument {
                ty: "unsigned long",
                name: "pos_l",
            },
            Argument {
                ty: "unsigned long",
                name: "pos_h",
            },
        ],
        Sysno::rt_tgsigqueueinfo => &[
            Argument {
                ty: "pid_t",
                name: "tgid",
            },
            Argument {
                ty: "pid_t",
                name: "pid",
            },
            Argument {
                ty: "int",
                name: "sig",
            },
            Argument {
                ty: "siginfo_t __user *",
                name: "uinfo",
            },
        ],
        Sysno::perf_event_open => &[
            Argument {
                ty: "struct perf_event_attr __user *",
                name: "attr_uptr",
            },
            Argument {
                ty: "pid_t",
                name: "pid",
            },
            Argument {
                ty: "int",
                name: "cpu",
            },
            Argument {
                ty: "int",
                name: "group_fd",
            },
            Argument {
                ty: "unsigned long",
                name: "flags",
            },
        ],
        Sysno::accept4 => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "struct sockaddr __user *",
                name: "upeer_sockaddr",
            },
            Argument {
                ty: "int __user *",
                name: "upeer_addrlen",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::recvmmsg => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "struct mmsghdr __user *",
                name: "mmsg",
            },
            Argument {
                ty: "unsigned int",
                name: "vlen",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
            Argument {
                ty: "struct __kernel_timespec __user *",
                name: "timeout",
            },
        ],
        Sysno::fanotify_init => &[
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
            Argument {
                ty: "unsigned int",
                name: "event_f_flags",
            },
        ],
        Sysno::fanotify_mark => &[
            Argument {
                ty: "int",
                name: "fanotify_fd",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
            Argument {
                ty: "__u64",
                name: "mask",
            },
            Argument {
                ty: "int",
                name: "dfd",
            },
            Argument {
                ty: "const char  __user *",
                name: "pathname",
            },
        ],
        Sysno::prlimit64 => &[
            Argument {
                ty: "pid_t",
                name: "pid",
            },
            Argument {
                ty: "unsigned int",
                name: "resource",
            },
            Argument {
                ty: "const struct rlimit64 __user *",
                name: "new_rlim",
            },
            Argument {
                ty: "struct rlimit64 __user *",
                name: "old_rlim",
            },
        ],
        Sysno::name_to_handle_at => &[
            Argument {
                ty: "int",
                name: "dfd",
            },
            Argument {
                ty: "const char __user *",
                name: "name",
            },
            Argument {
                ty: "struct file_handle __user *",
                name: "handle",
            },
            Argument {
                ty: "int __user *",
                name: "mnt_id",
            },
            Argument {
                ty: "int",
                name: "flag",
            },
        ],
        Sysno::open_by_handle_at => &[
            Argument {
                ty: "int",
                name: "mountdirfd",
            },
            Argument {
                ty: "struct file_handle __user *",
                name: "handle",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::clock_adjtime => &[
            Argument {
                ty: "const clockid_t",
                name: "which_clock",
            },
            Argument {
                ty: "struct __kernel_timex __user *",
                name: "utx",
            },
        ],
        Sysno::syncfs => &[
            Argument {
                ty: "int",
                name: "fd",
            },
        ],
        Sysno::sendmmsg => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "struct mmsghdr __user *",
                name: "mmsg",
            },
            Argument {
                ty: "unsigned int",
                name: "vlen",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::setns => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::process_vm_readv => &[
            Argument {
                ty: "pid_t",
                name: "pid",
            },
            Argument {
                ty: "const struct iovec __user *",
                name: "lvec",
            },
            Argument {
                ty: "unsigned long",
                name: "liovcnt",
            },
            Argument {
                ty: "const struct iovec __user *",
                name: "rvec",
            },
            Argument {
                ty: "unsigned long",
                name: "riovcnt",
            },
            Argument {
                ty: "unsigned long",
                name: "flags",
            },
        ],
        Sysno::process_vm_writev => &[
            Argument {
                ty: "pid_t",
                name: "pid",
            },
            Argument {
                ty: "const struct iovec __user *",
                name: "lvec",
            },
            Argument {
                ty: "unsigned long",
                name: "liovcnt",
            },
            Argument {
                ty: "const struct iovec __user *",
                name: "rvec",
            },
            Argument {
                ty: "unsigned long",
                name: "riovcnt",
            },
            Argument {
                ty: "unsigned long",
                name: "flags",
            },
        ],
        Sysno::kcmp => &[
            Argument {
                ty: "pid_t",
                name: "pid1",
            },
            Argument {
                ty: "pid_t",
                name: "pid2",
            },
            Argument {
                ty: "int",
                name: "type",
            },
            Argument {
                ty: "unsigned long",
                name: "idx1",
            },
            Argument {
                ty: "unsigned long",
                name: "idx2",
            },
        ],
        Sysno::finit_module => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "const char __user *",
                name: "uargs",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::getdents64 => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
            Argument {
                ty: "struct linux_dirent64 __user *",
                name: "dirent",
            },
            Argument {
                ty: "unsigned int",
                name: "count",
            },
        ],
        Sysno::sched_setattr => &[
            Argument {
                ty: "pid_t",
                name: "pid",
            },
            Argument {
                ty: "struct sched_attr __user *",
                name: "uattr",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::sched_getattr => &[
            Argument {
                ty: "pid_t",
                name: "pid",
            },
            Argument {
                ty: "struct sched_attr __user *",
                name: "uattr",
            },
            Argument {
                ty: "unsigned int",
                name: "usize",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::renameat2 => &[
            Argument {
                ty: "int",
                name: "olddfd",
            },
            Argument {
                ty: "const char __user *",
                name: "oldname",
            },
            Argument {
                ty: "int",
                name: "newdfd",
            },
            Argument {
                ty: "const char __user *",
                name: "newname",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::seccomp => &[
            Argument {
                ty: "unsigned int",
                name: "op",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
            Argument {
                ty: "void __user *",
                name: "uargs",
            },
        ],
        Sysno::getrandom => &[
            Argument {
                ty: "char __user *",
                name: "buf",
            },
            Argument {
                ty: "size_t",
                name: "count",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::memfd_create => &[
            Argument {
                ty: "const char __user *",
                name: "uname",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::bpf => &[
            Argument {
                ty: "int",
                name: "cmd",
            },
            Argument {
                ty: "union bpf_attr __user *",
                name: "uattr",
            },
            Argument {
                ty: "unsigned int",
                name: "size",
            },
        ],
        Sysno::execveat => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "const char __user *const __user *",
                name: "argv",
            },
            Argument {
                ty: "const char __user *const __user *",
                name: "envp",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::userfaultfd => &[
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::membarrier => &[
            Argument {
                ty: "int",
                name: "cmd",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
            Argument {
                ty: "int",
                name: "cpu_id",
            },
        ],
        Sysno::mlock2 => &[
            Argument {
                ty: "unsigned long",
                name: "start",
            },
            Argument {
                ty: "size_t",
                name: "len",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::copy_file_range => &[
            Argument {
                ty: "int",
                name: "fd_in",
            },
            Argument {
                ty: "loff_t __user *",
                name: "off_in",
            },
            Argument {
                ty: "int",
                name: "fd_out",
            },
            Argument {
                ty: "loff_t __user *",
                name: "off_out",
            },
            Argument {
                ty: "size_t",
                name: "len",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::preadv2 => &[
            Argument {
                ty: "unsigned long",
                name: "fd",
            },
            Argument {
                ty: "const struct iovec __user *",
                name: "vec",
            },
            Argument {
                ty: "unsigned long",
                name: "vlen",
            },
            Argument {
                ty: "unsigned long",
                name: "pos_l",
            },
            Argument {
                ty: "unsigned long",
                name: "pos_h",
            },
            Argument {
                ty: "rwf_t",
                name: "flags",
            },
        ],
        Sysno::pwritev2 => &[
            Argument {
                ty: "unsigned long",
                name: "fd",
            },
            Argument {
                ty: "const struct iovec __user *",
                name: "vec",
            },
            Argument {
                ty: "unsigned long",
                name: "vlen",
            },
            Argument {
                ty: "unsigned long",
                name: "pos_l",
            },
            Argument {
                ty: "unsigned long",
                name: "pos_h",
            },
            Argument {
                ty: "rwf_t",
                name: "flags",
            },
        ],
        Sysno::pkey_mprotect => &[
            Argument {
                ty: "unsigned long",
                name: "start",
            },
            Argument {
                ty: "size_t",
                name: "len",
            },
            Argument {
                ty: "unsigned long",
                name: "prot",
            },
            Argument {
                ty: "int",
                name: "pkey",
            },
        ],
        Sysno::pkey_alloc => &[
            Argument {
                ty: "unsigned long",
                name: "flags",
            },
            Argument {
                ty: "unsigned long",
                name: "init_val",
            },
        ],
        Sysno::pkey_free => &[
            Argument {
                ty: "int",
                name: "pkey",
            },
        ],
        Sysno::statx => &[
            Argument {
                ty: "int",
                name: "dfd",
            },
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "unsigned",
                name: "flags",
            },
            Argument {
                ty: "unsigned int",
                name: "mask",
            },
            Argument {
                ty: "struct statx __user *",
                name: "buffer",
            },
        ],
        Sysno::rseq => &[
            Argument {
                ty: "struct rseq __user *",
                name: "rseq",
            },
            Argument {
                ty: "u32",
                name: "rseq_len",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
            Argument {
                ty: "u32",
                name: "sig",
            },
        ],
        Sysno::io_pgetevents => &[
            Argument {
                ty: "aio_context_t",
                name: "ctx_id",
            },
            Argument {
                ty: "long",
                name: "min_nr",
            },
            Argument {
                ty: "long",
                name: "nr",
            },
            Argument {
                ty: "struct io_event __user *",
                name: "events",
            },
            Argument {
                ty: "struct __kernel_timespec __user *",
                name: "timeout",
            },
            Argument {
                ty: "const struct __aio_sigset __user *",
                name: "usig",
            },
        ],
        Sysno::pidfd_send_signal => &[
            Argument {
                ty: "int",
                name: "pidfd",
            },
            Argument {
                ty: "int",
                name: "sig",
            },
            Argument {
                ty: "siginfo_t __user *",
                name: "info",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::io_uring_setup => &[
            Argument {
                ty: "u32",
                name: "entries",
            },
            Argument {
                ty: "struct io_uring_params __user *",
                name: "params",
            },
        ],
        Sysno::io_uring_enter => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
            Argument {
                ty: "u32",
                name: "to_submit",
            },
            Argument {
                ty: "u32",
                name: "min_complete",
            },
            Argument {
                ty: "u32",
                name: "flags",
            },
            Argument {
                ty: "const void __user *",
                name: "argp",
            },
            Argument {
                ty: "size_t",
                name: "argsz",
            },
        ],
        Sysno::io_uring_register => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
            Argument {
                ty: "unsigned int",
                name: "opcode",
            },
            Argument {
                ty: "void __user *",
                name: "arg",
            },
            Argument {
                ty: "unsigned int",
                name: "nr_args",
            },
        ],
        Sysno::open_tree => &[
            Argument {
                ty: "int",
                name: "dfd",
            },
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "unsigned",
                name: "flags",
            },
        ],
        Sysno::move_mount => &[
            Argument {
                ty: "int",
                name: "from_dfd",
            },
            Argument {
                ty: "const char __user *",
                name: "from_pathname",
            },
            Argument {
                ty: "int",
                name: "to_dfd",
            },
            Argument {
                ty: "const char __user *",
                name: "to_pathname",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::fsopen => &[
            Argument {
                ty: "const char __user *",
                name: "_fs_name",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::fsconfig => &[
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "unsigned int",
                name: "cmd",
            },
            Argument {
                ty: "const char __user *",
                name: "_key",
            },
            Argument {
                ty: "const void __user *",
                name: "_value",
            },
            Argument {
                ty: "int",
                name: "aux",
            },
        ],
        Sysno::fsmount => &[
            Argument {
                ty: "int",
                name: "fs_fd",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
            Argument {
                ty: "unsigned int",
                name: "attr_flags",
            },
        ],
        Sysno::fspick => &[
            Argument {
                ty: "int",
                name: "dfd",
            },
            Argument {
                ty: "const char __user *",
                name: "path",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::pidfd_open => &[
            Argument {
                ty: "pid_t",
                name: "pid",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::clone3 => &[
            Argument {
                ty: "struct clone_args __user *",
                name: "uargs",
            },
            Argument {
                ty: "size_t",
                name: "size",
            },
        ],
        Sysno::close_range => &[
            Argument {
                ty: "unsigned int",
                name: "fd",
            },
            Argument {
                ty: "unsigned int",
                name: "max_fd",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::openat2 => &[
            Argument {
                ty: "int",
                name: "dfd",
            },
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "struct open_how __user *",
                name: "how",
            },
            Argument {
                ty: "size_t",
                name: "usize",
            },
        ],
        Sysno::pidfd_getfd => &[
            Argument {
                ty: "int",
                name: "pidfd",
            },
            Argument {
                ty: "int",
                name: "fd",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::faccessat2 => &[
            Argument {
                ty: "int",
                name: "dfd",
            },
            Argument {
                ty: "const char __user *",
                name: "filename",
            },
            Argument {
                ty: "int",
                name: "mode",
            },
            Argument {
                ty: "int",
                name: "flags",
            },
        ],
        Sysno::process_madvise => &[
            Argument {
                ty: "int",
                name: "pidfd",
            },
            Argument {
                ty: "const struct iovec __user *",
                name: "vec",
            },
            Argument {
                ty: "size_t",
                name: "vlen",
            },
            Argument {
                ty: "int",
                name: "behavior",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
        ],
        Sysno::epoll_pwait2 => &[
            Argument {
                ty: "int",
                name: "epfd",
            },
            Argument {
                ty: "struct epoll_event __user *",
                name: "events",
            },
            Argument {
                ty: "int",
                name: "maxevents",
            },
            Argument {
                ty: "const struct __kernel_timespec __user *",
                name: "timeout",
            },
            Argument {
                ty: "const sigset_t __user *",
                name: "sigmask",
            },
            Argument {
                ty: "size_t",
                name: "sigsetsize",
            },
        ],
        Sysno::mount_setattr => &[
            Argument {
                ty: "int",
                name: "dfd",
            },
            Argument {
                ty: "const char __user *",
                name: "path",
            },
            Argument {
                ty: "unsigned int",
                name: "flags",
            },
            Argument {
                ty: "struct mount_attr __user *",
                name: "uattr",
            },
            Argument {
                ty: "size_t",
                name: "usize",
            },
        ],
        Sysno::quotactl_path => &[
            Argument {
                ty: "unsigned int",
                name: "cmd",
            },
            Argument {
                ty: "const char __user *",
                name: "mountpoint",
            },
            Argument {
                ty: "qid_t",
                name: "id",
            },
            Argument {
                ty: "void __user *",
                name: "addr",
            },
        ],
        Sysno::landlock_create_ruleset => &[
            Argument {
                ty: "const struct landlock_ruleset_attr __user *const",
                name: "attr",
            },
            Argument {
                ty: "const size_t",
                name: "size",
            },
            Argument {
                ty: "const __u32",
                name: "flags",
            },
        ],
        Sysno::landlock_add_rule => &[
            Argument {
                ty: "const int",
                name: "ruleset_fd",
            },
            Argument {
                ty: "const enum landlock_rule_type",
                name: "rule_type",
            },
            Argument {
                ty: "const void __user *const",
                name: "rule_attr",
            },
            Argument {
                ty: "const __u32",
                name: "flags",
            },
        ],
        Sysno::landlock_restrict_self => &[
            Argument {
                ty: "const int",
                name: "ruleset_fd",
            },
            Argument {
                ty: "const __u32",
                name: "flags",
            },
        ],
        _ => &[],
    }
}
